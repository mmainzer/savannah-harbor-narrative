<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0213.2333                               -->
<workbook original-version='18.1' source-build='2019.1.0 (20191.19.0213.2333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='port-of-lading-summary (savannah-unlading_2014-2018)' inline='true' name='federated.1phuvdy1lq0m8w1h3bhw90cfl96s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='savannah-unlading_2014-2018' name='excel-direct.0yhm0kx1yhvyj614xwj5o0tofxdc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/MTMAINZE/projects/project_74-savannah-harbor-narrative/savannah-harbor-narrative/data/unlading-data/savannah-unlading_2014-2018.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0yhm0kx1yhvyj614xwj5o0tofxdc' name='port-of-lading-summary' table='[&apos;port-of-lading-summary$&apos;]' type='table'>
          <columns gridOrigin='A1:E1910:no:A1:E1910:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Port of Lading' ordinal='1' />
            <column datatype='string' name='Country of Lading' ordinal='2' />
            <column datatype='integer' name='Shipments' ordinal='3' />
            <column datatype='integer' name='Containers' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[port-of-lading-summary]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Port of Lading</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Port of Lading]</local-name>
            <parent-name>[port-of-lading-summary]</parent-name>
            <remote-alias>Port of Lading</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country of Lading</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country of Lading]</local-name>
            <parent-name>[port-of-lading-summary]</parent-name>
            <remote-alias>Country of Lading</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipments</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Shipments]</local-name>
            <parent-name>[port-of-lading-summary]</parent-name>
            <remote-alias>Shipments</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Containers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Containers]</local-name>
            <parent-name>[port-of-lading-summary]</parent-name>
            <remote-alias>Containers</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[port-of-lading-summary]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E1910:no:A1:E1910:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country of Lading]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;China (Mainland)&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;Fiji Islands&quot;' value='&quot;Fiji&quot;' />
          <semantic-value key='&quot;Netherland Antilles&quot;' value='&quot;Netherlands&quot;' />
          <semantic-value key='&quot;St. Vincent &amp; Northern Grenadines&quot;' value='&quot;Saint Vincent and the Grenadines&quot;' />
          <semantic-value key='&quot;Venezuala&quot;' value='&quot;Venezuela&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Port of Lading]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Attalea&quot;' value='&quot;Antalya&quot;' />
          <semantic-value key='&quot;Banjer Masin&quot;' value='&quot;Banjarmasin&quot;' />
          <semantic-value key='&quot;Bathurst&quot;' value='&quot;Banjul&quot;' />
          <semantic-value key='&quot;Belize&quot;' value='&quot;Belize City&quot;' />
          <semantic-value key='&quot;Big Creek&quot;' value='&quot;Big Creek&quot;' />
          <semantic-value key='&quot;Cheju&quot;' value='&quot;Jeju&quot;' />
          <semantic-value key='&quot;Chibako&quot;' value='&quot;Chiba&quot;' />
          <semantic-value key='&quot;Colombo Harbor&quot;' value='&quot;Colombo&quot;' />
          <semantic-value key='&quot;Derindje&quot;' value='&quot;Derince&quot;' />
          <semantic-value key='&quot;El Djazair&quot;' value='&quot;Algiers&quot;' />
          <semantic-value key='&quot;Freeport&quot;' value='&quot;Freeport&quot;' />
          <semantic-value key='&quot;Hull&quot;' value='&quot;Hull&quot;' />
          <semantic-value key='&quot;Jiangyin&quot;' value='&quot;Changzhou Shi&quot;' />
          <semantic-value key='&quot;Jinsen&quot;' value='&quot;Incheon&quot;' />
          <semantic-value key='&quot;Kanokawa&quot;' value='&quot;Kanagawa-ku, Yokohama-shi&quot;' />
          <semantic-value key='&quot;Karachi Harbor&quot;' value='&quot;Karachi&quot;' />
          <semantic-value key='&quot;Khor al Ami&quot;' value='&quot;Kuwait City&quot;' />
          <semantic-value key='&quot;Kole Terminal&quot;' value='&quot;Douala&quot;' />
          <semantic-value key='&quot;Kristiansand S&quot;' value='&quot;Kristiansand&quot;' />
          <semantic-value key='&quot;Kunson&quot;' value='&quot;Gunsan&quot;' />
          <semantic-value key='&quot;La Coruna&quot;' value='&quot;Corunna&quot;' />
          <semantic-value key='&quot;Londonderry&quot;' value='&quot;Londonderry&quot;' />
          <semantic-value key='&quot;Military - Quingdau&quot;' value='&quot;Qingdao Shi&quot;' />
          <semantic-value key='&quot;Military - Yokohama&quot;' value='&quot;Kanagawa-ku, Yokohama-shi&quot;' />
          <semantic-value key='&quot;Mina Dumyat&quot;' value='&quot;Damietta&quot;' />
          <semantic-value key='&quot;Mina Zayed&quot;' value='&quot;Dubai&quot;' />
          <semantic-value key='&quot;Mizusima&quot;' value='&quot;Toyama-shi&quot;' />
          <semantic-value key='&quot;Nanticoke&quot;' value='&quot;Nanticoke&quot;' />
          <semantic-value key='&quot;Ningpo&quot;' value='&quot;Ningbo Shi&quot;' />
          <semantic-value key='&quot;North Atlantic (Maine to Cape Hatteras)&quot;' value='&quot;Hatteras&quot;' />
          <semantic-value key='&quot;Pakhoi&quot;' value='&quot;Beihai Shi&quot;' />
          <semantic-value key='&quot;Panama Canal - Caribbean&quot;' value='&quot;Panama City&quot;' />
          <semantic-value key='&quot;Pandjang&quot;' value='&quot;Bandar Lampung&quot;' />
          <semantic-value key='&quot;Philipsburgh&quot;' value='&quot;Philipsburg&quot;' />
          <semantic-value key='&quot;Pinang&quot;' value='&quot;Penang&quot;' />
          <semantic-value key='&quot;Port Arthur&quot;' value='&quot;Dalian Shi&quot;' />
          <semantic-value key='&quot;Port Bustamante&quot;' value='&quot;Port Royal&quot;' />
          <semantic-value key='&quot;Port Lyttelton&quot;' value='&quot;Lyttelton&quot;' />
          <semantic-value key='&quot;Port Natal&quot;' value='&quot;Durban&quot;' />
          <semantic-value key='&quot;Port Qasim&quot;' value='&quot;Karachi&quot;' />
          <semantic-value key='&quot;Puduchcheri&quot;' value='&quot;Puducherry&quot;' />
          <semantic-value key='&quot;Puerto Manzanillo&quot;' value='&quot;Manzanillo&quot;' />
          <semantic-value key='&quot;Qinhuangdao Gang&quot;' value='&quot;Qinhuangdao Shi&quot;' />
          <semantic-value key='&quot;Santa Barbara de Samana&quot;' value='&quot;Samana&quot;' />
          <semantic-value key='&quot;Sluiskill&quot;' value='&quot;Sluiskil&quot;' />
          <semantic-value key='&quot;Songkhla Harbor&quot;' value='&quot;Songkhla&quot;' />
          <semantic-value key='&quot;Soo&quot;' value='&quot;Sault Ste. Marie&quot;' />
          <semantic-value key='&quot;Sriracha&quot;' value='&quot;Si Racha&quot;' />
          <semantic-value key='&quot;St. Croix&quot;' value='&quot;Saint Croix&quot;' />
          <semantic-value key='&quot;Sultan Qaboos&quot;' value='&quot;Muscat&quot;' />
          <semantic-value key='&quot;Swatow&quot;' value='&quot;Shantou Shi&quot;' />
          <semantic-value key='&quot;Tallinn&quot;' value='&quot;Tallinn&quot;' />
          <semantic-value key='&quot;Tanjung Priok&quot;' value='&quot;Tipar&quot;' />
          <semantic-value key='&quot;Tarakan Island&quot;' value='&quot;Tarakan&quot;' />
          <semantic-value key='&quot;Thanh Pho Ho Chi Minh&quot;' value='&quot;Ho Chi Minh City&quot;' />
          <semantic-value key='&quot;Tourane&quot;' value='&quot;Da Nang&quot;' />
          <semantic-value key='&quot;Toyohasi&quot;' value='&quot;Toyohashi-shi&quot;' />
          <semantic-value key='&quot;Trincomali&quot;' value='&quot;Trincomalee&quot;' />
          <semantic-value key='&quot;Valencia Harvor&quot;' value='&quot;Knightstown&quot;' />
          <semantic-value key='&quot;Vegesack&quot;' value='&quot;Bremen&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Aalesund&quot;' value='62.472119999999997' />
          <semantic-value key='&quot;Apapa&quot;' value='6.4554280000000004' />
          <semantic-value key='&quot;Aratu&quot;' value='-12.778541000000001' />
          <semantic-value key='&quot;Bahia de Amuay&quot;' value='11.776904' />
          <semantic-value key='&quot;Bangor&quot;' value='53.227094999999998' />
          <semantic-value key='&quot;Barcadera&quot;' value='12.48315' />
          <semantic-value key='&quot;Bassens&quot;' value='44.907451999999999' />
          <semantic-value key='&quot;Bei Jao&quot;' value='22.928619000000001' />
          <semantic-value key='&quot;Beilun&quot;' value='29.906571' />
          <semantic-value key='&quot;Bell Bay&quot;' value='-41.13308' />
          <semantic-value key='&quot;Boca Chica&quot;' value='18.452537' />
          <semantic-value key='&quot;Bukhta Severnaya&quot;' value='42.934216999999997' />
          <semantic-value key='&quot;Cagayan de Oro&quot;' value='8.4896419999999999' />
          <semantic-value key='&quot;Caucedo&quot;' value='18.425775000000002' />
          <semantic-value key='&quot;Chiwan&quot;' value='22.460884' />
          <semantic-value key='&quot;Constantza&quot;' value='44.162775000000003' />
          <semantic-value key='&quot;Contrecoeur&quot;' value='45.863187000000003' />
          <semantic-value key='&quot;Dos Bocas&quot;' value='19.082697' />
          <semantic-value key='&quot;El Dekheila&quot;' value='31.125387' />
          <semantic-value key='&quot;Escombreras&quot;' value='37.559161000000003' />
          <semantic-value key='&quot;Fremantle&quot;' value='-32.057139999999997' />
          <semantic-value key='&quot;Fuzhou&quot;' value='26.057061000000001' />
          <semantic-value key='&quot;Gevle&quot;' value='60.676642000000001' />
          <semantic-value key='&quot;Gozo Island&quot;' value='36.042090000000002' />
          <semantic-value key='&quot;Hakata&quot;' value='33.610410000000002' />
          <semantic-value key='&quot;Hirohata&quot;' value='34.787025999999997' />
          <semantic-value key='&quot;Hitaki Ko&quot;' value='34.787025999999997' />
          <semantic-value key='&quot;Irvine Harbor&quot;' value='55.608159999999998' />
          <semantic-value key='&quot;Itajay&quot;' value='-26.912541000000001' />
          <semantic-value key='&quot;Jebel Ali&quot;' value='24.987984999999998' />
          <semantic-value key='&quot;Jorf Lasfar&quot;' value='33.155647999999999' />
          <semantic-value key='&quot;Judda&quot;' value='21.494458000000002' />
          <semantic-value key='&quot;Kaohsiung&quot;' value='22.673974000000001' />
          <semantic-value key='&quot;Kemlik&quot;' value='39.976376000000002' />
          <semantic-value key='&quot;Khor Fakkan&quot;' value='25.353408000000002' />
          <semantic-value key='&quot;King Abdul Aziz Port&quot;' value='26.474426000000001' />
          <semantic-value key='&quot;Kingston&quot;' value='44.230178000000002' />
          <semantic-value key='&quot;L&apos;Avera&quot;' value='43.388568999999997' />
          <semantic-value key='&quot;La Pampilla&quot;' value='-11.920743' />
          <semantic-value key='&quot;Laem Chabang&quot;' value='13.101851999999999' />
          <semantic-value key='&quot;Laguna de Chiriqui&quot;' value='9.0482990000000001' />
          <semantic-value key='&quot;Lazaro Cardenas&quot;' value='17.954609999999999' />
          <semantic-value key='&quot;Luda&quot;' value='22.310763999999999' />
          <semantic-value key='&quot;Mahahual&quot;' value='18.715810000000001' />
          <semantic-value key='&quot;Mamonal&quot;' value='10.312326000000001' />
          <semantic-value key='&quot;Military - Port Kelang&quot;' value='2.996632' />
          <semantic-value key='&quot;Moin&quot;' value='9.9924759999999999' />
          <semantic-value key='&quot;Moji&quot;' value='33.911963' />
          <semantic-value key='&quot;Mosel&quot;' value='43.268963999999997' />
          <semantic-value key='&quot;Munguba&quot;' value='-0.91625999999999996' />
          <semantic-value key='&quot;Mylaki&quot;' value='38.38353' />
          <semantic-value key='&quot;Nagoya Ko&quot;' value='35.084313999999999' />
          <semantic-value key='&quot;Nemrut Bay&quot;' value='38.744047000000002' />
          <semantic-value key='&quot;New Mangalore&quot;' value='12.947471999999999' />
          <semantic-value key='&quot;Nhava Sheva&quot;' value='18.949912999999999' />
          <semantic-value key='&quot;Ocho Rios&quot;' value='18.407342' />
          <semantic-value key='&quot;Pajaritos&quot;' value='20.557535000000001' />
          <semantic-value key='&quot;Panderma&quot;' value='40.353513' />
          <semantic-value key='&quot;Pasir Gudang&quot;' value='1.4660839999999999' />
          <semantic-value key='&quot;Penarth&quot;' value='51.445248999999997' />
          <semantic-value key='&quot;Piraievs&quot;' value='37.943368999999997' />
          <semantic-value key='&quot;Pohang Hang&quot;' value='36.029528999999997' />
          <semantic-value key='&quot;Point Lisas&quot;' value='10.407755999999999' />
          <semantic-value key='&quot;Point Tupper&quot;' value='45.606653000000001' />
          <semantic-value key='&quot;Pointe a Pierre&quot;' value='10.31551' />
          <semantic-value key='&quot;Port do Pecem&quot;' value='-3.5521180000000001' />
          <semantic-value key='&quot;Port Esquivel&quot;' value='17.893920999999999' />
          <semantic-value key='&quot;Port Kembla&quot;' value='-34.486659000000003' />
          <semantic-value key='&quot;Port Rashid&quot;' value='25.284811999999999' />
          <semantic-value key='&quot;Port Swettenham&quot;' value='2.9986890000000002' />
          <semantic-value key='&quot;Porto de Leixoes&quot;' value='41.183098000000001' />
          <semantic-value key='&quot;Portocel&quot;' value='-19.840129999999998' />
          <semantic-value key='&quot;Progreso&quot;' value='21.279890999999999' />
          <semantic-value key='&quot;Puerto Bolivar&quot;' value='12.219196' />
          <semantic-value key='&quot;Puerto de Lirquen&quot;' value='-36.715183000000003' />
          <semantic-value key='&quot;Puerto Henecan&quot;' value='13.404448' />
          <semantic-value key='&quot;Puerto Miranda&quot;' value='7.9043239999999999' />
          <semantic-value key='&quot;Puerto Nuevo&quot;' value='-2.283944' />
          <semantic-value key='&quot;Puerto Quetzal&quot;' value='13.929124' />
          <semantic-value key='&quot;Puerto Vargas&quot;' value='9.7312200000000004' />
          <semantic-value key='&quot;Pulum Bukum&quot;' value='1.234464' />
          <semantic-value key='&quot;Punta Morales&quot;' value='10.067382' />
          <semantic-value key='&quot;Pyungtaek&quot;' value='36.992193999999998' />
          <semantic-value key='&quot;Ras Al Khafji&quot;' value='28.428712999999998' />
          <semantic-value key='&quot;Ringaskiddy&quot;' value='51.830506999999997' />
          <semantic-value key='&quot;Rio Jaina&quot;' value='18.600787' />
          <semantic-value key='&quot;Ruwais&quot;' value='24.109658' />
          <semantic-value key='&quot;Samarai&quot;' value='-10.612055' />
          <semantic-value key='&quot;San Juan de Nieva&quot;' value='43.587783000000002' />
          <semantic-value key='&quot;San Lorenzo&quot;' value='-32.747911000000002' />
          <semantic-value key='&quot;Sangi&quot;' value='10.385949' />
          <semantic-value key='&quot;Santa Clara&quot;' value='-2.4248539999999998' />
          <semantic-value key='&quot;Santa Panagia&quot;' value='37.101041000000002' />
          <semantic-value key='&quot;Santo Tomas de Castilla&quot;' value='15.690427' />
          <semantic-value key='&quot;Sao Luiz de Maranhao&quot;' value='-2.5393650000000001' />
          <semantic-value key='&quot;Sarnia&quot;' value='42.974594000000003' />
          <semantic-value key='&quot;Saupe&quot;' value='-12.738681' />
          <semantic-value key='&quot;Savanna La Mar&quot;' value='18.229755000000001' />
          <semantic-value key='&quot;Selangor&quot;' value='3.3391470000000001' />
          <semantic-value key='&quot;Sepetiba Bay&quot;' value='-22.986329000000001' />
          <semantic-value key='&quot;Serangoon Harbor&quot;' value='1.3974340000000001' />
          <semantic-value key='&quot;Seven Islands&quot;' value='44.455103000000001' />
          <semantic-value key='&quot;Shekou&quot;' value='22.481929000000001' />
          <semantic-value key='&quot;Shellhaven&quot;' value='51.512303000000003' />
          <semantic-value key='&quot;Shilong&quot;' value='23.105274999999999' />
          <semantic-value key='&quot;Simizu&quot;' value='35.098028999999997' />
          <semantic-value key='&quot;Sinoe&quot;' value='5.0250640000000004' />
          <semantic-value key='&quot;South Riding Point&quot;' value='26.625854' />
          <semantic-value key='&quot;South Shetlands&quot;' value='-62.207858999999999' />
          <semantic-value key='&quot;Southhampton&quot;' value='50.909450999999997' />
          <semantic-value key='&quot;St. Ann&apos;s Bay&quot;' value='18.429884999999999' />
          <semantic-value key='&quot;St. Eustatius&quot;' value='52.054468' />
          <semantic-value key='&quot;St. Martin&quot;' value='18.081091000000001' />
          <semantic-value key='&quot;Stadersand&quot;' value='53.620538000000003' />
          <semantic-value key='&quot;Subic Bay&quot;' value='14.791409' />
          <semantic-value key='&quot;Sungei Pakning&quot;' value='1.3399970000000001' />
          <semantic-value key='&quot;Surabaya&quot;' value='-7.2595929999999997' />
          <semantic-value key='&quot;Susaka&quot;' value='44.508685' />
          <semantic-value key='&quot;Taichung&quot;' value='24.139690999999999' />
          <semantic-value key='&quot;Tanjung Pelepas&quot;' value='1.362382' />
          <semantic-value key='&quot;Tanjunguban&quot;' value='1.0615289999999999' />
          <semantic-value key='&quot;Teesport&quot;' value='54.610365999999999' />
          <semantic-value key='&quot;Teluk Bayur&quot;' value='-0.99244399999999999' />
          <semantic-value key='&quot;Tema&quot;' value='5.7346950000000003' />
          <semantic-value key='&quot;Tilbury&quot;' value='51.462698000000003' />
          <semantic-value key='&quot;Tin Can Island&quot;' value='6.4314200000000001' />
          <semantic-value key='&quot;Tobago&quot;' value='11.232821' />
          <semantic-value key='&quot;Trombetas&quot;' value='-7.399667' />
          <semantic-value key='&quot;Turiamo&quot;' value='10.442997999999999' />
          <semantic-value key='&quot;Tutunciftlik&quot;' value='40.761786999999998' />
          <semantic-value key='&quot;Uzunkum&quot;' value='37.817354999999999' />
          <semantic-value key='&quot;Vacamonte&quot;' value='8.910425' />
          <semantic-value key='&quot;Vaksdal&quot;' value='60.578510000000001' />
          <semantic-value key='&quot;Vallvik&quot;' value='61.184803000000002' />
          <semantic-value key='&quot;Victoria&quot;' value='48.428511999999998' />
          <semantic-value key='&quot;Vila do Conde&quot;' value='-1.5419860000000001' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Aalesund&quot;' value='6.1499079999999999' />
          <semantic-value key='&quot;Apapa&quot;' value='3.3646500000000001' />
          <semantic-value key='&quot;Aratu&quot;' value='-38.497734999999999' />
          <semantic-value key='&quot;Bahia de Amuay&quot;' value='-70.242108000000002' />
          <semantic-value key='&quot;Bangor&quot;' value='-4.1282629999999996' />
          <semantic-value key='&quot;Barcadera&quot;' value='-69.990280999999996' />
          <semantic-value key='&quot;Bassens&quot;' value='-0.52819300000000002' />
          <semantic-value key='&quot;Bei Jao&quot;' value='113.208045' />
          <semantic-value key='&quot;Beilun&quot;' value='121.838385' />
          <semantic-value key='&quot;Bell Bay&quot;' value='146.85897800000001' />
          <semantic-value key='&quot;Boca Chica&quot;' value='-69.607164999999995' />
          <semantic-value key='&quot;Bukhta Severnaya&quot;' value='131.401184' />
          <semantic-value key='&quot;Cagayan de Oro&quot;' value='124.620439' />
          <semantic-value key='&quot;Caucedo&quot;' value='-69.630825999999999' />
          <semantic-value key='&quot;Chiwan&quot;' value='113.88923' />
          <semantic-value key='&quot;Constantza&quot;' value='28.636849000000002' />
          <semantic-value key='&quot;Contrecoeur&quot;' value='-73.251276000000004' />
          <semantic-value key='&quot;Dos Bocas&quot;' value='-96.146985000000001' />
          <semantic-value key='&quot;El Dekheila&quot;' value='29.812021999999999' />
          <semantic-value key='&quot;Escombreras&quot;' value='-0.96923999999999999' />
          <semantic-value key='&quot;Fremantle&quot;' value='115.743172' />
          <semantic-value key='&quot;Fuzhou&quot;' value='119.296423' />
          <semantic-value key='&quot;Gevle&quot;' value='17.142924000000001' />
          <semantic-value key='&quot;Gozo Island&quot;' value='14.252424' />
          <semantic-value key='&quot;Hakata&quot;' value='130.40307999999999' />
          <semantic-value key='&quot;Hirohata&quot;' value='135.40090000000001' />
          <semantic-value key='&quot;Hitaki Ko&quot;' value='135.40090000000001' />
          <semantic-value key='&quot;Irvine Harbor&quot;' value='-4.6887319999999999' />
          <semantic-value key='&quot;Itajay&quot;' value='-48.667282999999998' />
          <semantic-value key='&quot;Jebel Ali&quot;' value='55.022581000000002' />
          <semantic-value key='&quot;Jorf Lasfar&quot;' value='-8.6227920000000005' />
          <semantic-value key='&quot;Judda&quot;' value='39.171382999999999' />
          <semantic-value key='&quot;Kaohsiung&quot;' value='120.280269' />
          <semantic-value key='&quot;Kemlik&quot;' value='32.583550000000002' />
          <semantic-value key='&quot;Khor Fakkan&quot;' value='56.358727999999999' />
          <semantic-value key='&quot;King Abdul Aziz Port&quot;' value='50.192681' />
          <semantic-value key='&quot;Kingston&quot;' value='-76.488794999999996' />
          <semantic-value key='&quot;L&apos;Avera&quot;' value='5.0305689999999998' />
          <semantic-value key='&quot;La Pampilla&quot;' value='-77.140218000000004' />
          <semantic-value key='&quot;Laem Chabang&quot;' value='100.913264' />
          <semantic-value key='&quot;Laguna de Chiriqui&quot;' value='-82.081196000000006' />
          <semantic-value key='&quot;Lazaro Cardenas&quot;' value='-102.191582' />
          <semantic-value key='&quot;Luda&quot;' value='114.191295' />
          <semantic-value key='&quot;Mahahual&quot;' value='-87.707537000000002' />
          <semantic-value key='&quot;Mamonal&quot;' value='-75.501333000000002' />
          <semantic-value key='&quot;Military - Port Kelang&quot;' value='101.394172' />
          <semantic-value key='&quot;Moin&quot;' value='-83.094492000000002' />
          <semantic-value key='&quot;Moji&quot;' value='130.97021000000001' />
          <semantic-value key='&quot;Mosel&quot;' value='-2.9347590000000001' />
          <semantic-value key='&quot;Munguba&quot;' value='-52.44744' />
          <semantic-value key='&quot;Mylaki&quot;' value='24.061402000000001' />
          <semantic-value key='&quot;Nagoya Ko&quot;' value='136.883848' />
          <semantic-value key='&quot;Nemrut Bay&quot;' value='26.833552999999998' />
          <semantic-value key='&quot;New Mangalore&quot;' value='74.817625000000007' />
          <semantic-value key='&quot;Nhava Sheva&quot;' value='72.951025000000001' />
          <semantic-value key='&quot;Ocho Rios&quot;' value='-77.105808999999994' />
          <semantic-value key='&quot;Pajaritos&quot;' value='-97.474902' />
          <semantic-value key='&quot;Panderma&quot;' value='27.968993999999999' />
          <semantic-value key='&quot;Pasir Gudang&quot;' value='103.87198600000001' />
          <semantic-value key='&quot;Penarth&quot;' value='-3.1672250000000002' />
          <semantic-value key='&quot;Piraievs&quot;' value='23.643711' />
          <semantic-value key='&quot;Pohang Hang&quot;' value='129.37716399999999' />
          <semantic-value key='&quot;Point Lisas&quot;' value='-61.492524000000003' />
          <semantic-value key='&quot;Point Tupper&quot;' value='-61.352902' />
          <semantic-value key='&quot;Pointe a Pierre&quot;' value='-61.458786000000003' />
          <semantic-value key='&quot;Port do Pecem&quot;' value='-38.831755999999999' />
          <semantic-value key='&quot;Port Esquivel&quot;' value='-77.132018000000002' />
          <semantic-value key='&quot;Port Kembla&quot;' value='150.90251900000001' />
          <semantic-value key='&quot;Port Rashid&quot;' value='55.278204000000002' />
          <semantic-value key='&quot;Port Swettenham&quot;' value='101.391769' />
          <semantic-value key='&quot;Porto de Leixoes&quot;' value='-8.7028839999999992' />
          <semantic-value key='&quot;Portocel&quot;' value='-40.057651' />
          <semantic-value key='&quot;Progreso&quot;' value='-89.664766' />
          <semantic-value key='&quot;Puerto Bolivar&quot;' value='-71.999690000000001' />
          <semantic-value key='&quot;Puerto de Lirquen&quot;' value='-72.981358' />
          <semantic-value key='&quot;Puerto Henecan&quot;' value='-87.429236000000003' />
          <semantic-value key='&quot;Puerto Miranda&quot;' value='-67.478913000000006' />
          <semantic-value key='&quot;Puerto Nuevo&quot;' value='-78.897141000000005' />
          <semantic-value key='&quot;Puerto Quetzal&quot;' value='-90.761673999999999' />
          <semantic-value key='&quot;Puerto Vargas&quot;' value='-82.814772000000005' />
          <semantic-value key='&quot;Pulum Bukum&quot;' value='103.762342' />
          <semantic-value key='&quot;Punta Morales&quot;' value='-84.948671000000004' />
          <semantic-value key='&quot;Pyungtaek&quot;' value='127.085368' />
          <semantic-value key='&quot;Ras Al Khafji&quot;' value='48.49053' />
          <semantic-value key='&quot;Ringaskiddy&quot;' value='-8.3211759999999995' />
          <semantic-value key='&quot;Rio Jaina&quot;' value='-70.147318999999996' />
          <semantic-value key='&quot;Ruwais&quot;' value='52.721159999999998' />
          <semantic-value key='&quot;Samarai&quot;' value='150.66402099999999' />
          <semantic-value key='&quot;San Juan de Nieva&quot;' value='-5.9356070000000001' />
          <semantic-value key='&quot;San Lorenzo&quot;' value='-60.734498000000002' />
          <semantic-value key='&quot;Sangi&quot;' value='123.65241' />
          <semantic-value key='&quot;Santa Clara&quot;' value='-54.714204000000002' />
          <semantic-value key='&quot;Santa Panagia&quot;' value='15.269824' />
          <semantic-value key='&quot;Santo Tomas de Castilla&quot;' value='-88.620148999999998' />
          <semantic-value key='&quot;Sao Luiz de Maranhao&quot;' value='-44.286963' />
          <semantic-value key='&quot;Sarnia&quot;' value='-82.411687999999998' />
          <semantic-value key='&quot;Saupe&quot;' value='-38.612997' />
          <semantic-value key='&quot;Savanna La Mar&quot;' value='-78.139852000000005' />
          <semantic-value key='&quot;Selangor&quot;' value='101.560378' />
          <semantic-value key='&quot;Sepetiba Bay&quot;' value='-43.693316000000003' />
          <semantic-value key='&quot;Serangoon Harbor&quot;' value='103.94113400000001' />
          <semantic-value key='&quot;Seven Islands&quot;' value='-63.674892' />
          <semantic-value key='&quot;Shekou&quot;' value='113.919675' />
          <semantic-value key='&quot;Shellhaven&quot;' value='0.50248700000000002' />
          <semantic-value key='&quot;Shilong&quot;' value='113.874206' />
          <semantic-value key='&quot;Simizu&quot;' value='138.89828600000001' />
          <semantic-value key='&quot;Sinoe&quot;' value='-9.0406259999999996' />
          <semantic-value key='&quot;South Riding Point&quot;' value='-78.230118000000004' />
          <semantic-value key='&quot;South Shetlands&quot;' value='-58.691121000000003' />
          <semantic-value key='&quot;Southhampton&quot;' value='-1.403246' />
          <semantic-value key='&quot;St. Ann&apos;s Bay&quot;' value='-77.199562999999998' />
          <semantic-value key='&quot;St. Eustatius&quot;' value='4.5436209999999999' />
          <semantic-value key='&quot;St. Martin&quot;' value='-63.050814000000003' />
          <semantic-value key='&quot;Stadersand&quot;' value='9.5289560000000009' />
          <semantic-value key='&quot;Subic Bay&quot;' value='120.24220699999999' />
          <semantic-value key='&quot;Sungei Pakning&quot;' value='102.13534199999999' />
          <semantic-value key='&quot;Surabaya&quot;' value='112.754603' />
          <semantic-value key='&quot;Susaka&quot;' value='14.306426' />
          <semantic-value key='&quot;Taichung&quot;' value='120.661964' />
          <semantic-value key='&quot;Tanjung Pelepas&quot;' value='103.553287' />
          <semantic-value key='&quot;Tanjunguban&quot;' value='104.220911' />
          <semantic-value key='&quot;Teesport&quot;' value='-1.1508910000000001' />
          <semantic-value key='&quot;Teluk Bayur&quot;' value='100.383875' />
          <semantic-value key='&quot;Tema&quot;' value='0.031449999999999999' />
          <semantic-value key='&quot;Tilbury&quot;' value='0.36106100000000002' />
          <semantic-value key='&quot;Tin Can Island&quot;' value='3.3436370000000002' />
          <semantic-value key='&quot;Tobago&quot;' value='-60.696677999999999' />
          <semantic-value key='&quot;Trombetas&quot;' value='-72.416460000000001' />
          <semantic-value key='&quot;Turiamo&quot;' value='-67.846881999999994' />
          <semantic-value key='&quot;Tutunciftlik&quot;' value='29.747608' />
          <semantic-value key='&quot;Uzunkum&quot;' value='27.540198' />
          <semantic-value key='&quot;Vacamonte&quot;' value='-79.701948000000002' />
          <semantic-value key='&quot;Vaksdal&quot;' value='5.7711579999999998' />
          <semantic-value key='&quot;Vallvik&quot;' value='17.179285' />
          <semantic-value key='&quot;Victoria&quot;' value='-123.36634599999999' />
          <semantic-value key='&quot;Vila do Conde&quot;' value='-48.751131999999998' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.47348' measure-ordering='alphabetic' measure-percentage='0.52652' show-structure='true' />
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
    <datasource caption='monthly-teu (savannah-unlading_2014-2018)' inline='true' name='federated.10sstqr12u8i5z10y81vi0toajb7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='savannah-unlading_2014-2018' name='excel-direct.1clr5uo08z8mhq0zquyds1pujcm5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/MTMAINZE/projects/project_74-savannah-harbor-narrative/savannah-harbor-narrative/data/unlading-data/savannah-unlading_2014-2018.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1clr5uo08z8mhq0zquyds1pujcm5' name='monthly-teu' table='[&apos;monthly-teu$&apos;]' type='table'>
          <columns gridOrigin='A1:N194:no:A1:N194:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='date' date-parse-format='MMMM' name='Month' ordinal='1' />
            <column datatype='integer' name='Imports Full' ordinal='2' />
            <column datatype='integer' name='Imports Empty' ordinal='3' />
            <column datatype='integer' name='Imports Total' ordinal='4' />
            <column datatype='real' name='Imports YoY' ordinal='5' />
            <column datatype='integer' name='Exports Full' ordinal='6' />
            <column datatype='integer' name='Exports Empty' ordinal='7' />
            <column datatype='integer' name='Exports Total' ordinal='8' />
            <column datatype='real' name='Exports YoY' ordinal='9' />
            <column datatype='integer' name='Total Full' ordinal='10' />
            <column datatype='integer' name='Total Empty' ordinal='11' />
            <column datatype='integer' name='Total' ordinal='12' />
            <column datatype='real' name='Total YoY' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N194:no:A1:N194:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imports Full</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Imports Full]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Imports Full</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imports Empty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Imports Empty]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Imports Empty</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imports Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Imports Total]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Imports Total</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imports YoY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Imports YoY]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Imports YoY</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exports Full</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Exports Full]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Exports Full</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exports Empty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Exports Empty]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Exports Empty</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exports Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Exports Total]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Exports Total</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exports YoY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Exports YoY]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Exports YoY</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Full</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Full]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Total Full</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Empty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Empty]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Total Empty</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total YoY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total YoY]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Total YoY</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Month Number' datatype='integer' name='[Calculation_428967894022176769]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEPART(&apos;month&apos;,[Month])' />
      </column>
      <column caption='Month/year' datatype='date' name='[Calculation_428967894022410242]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(STR([Calculation_428967894022176769]) + &quot;/01/&quot; + STR([Year]))' />
      </column>
      <column caption='Exports % of' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Calculation_428967894028173316]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='( SUM([Exports Total]) / SUM([Total]) ) * 100' />
      </column>
      <column caption='Imports % of' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Exports % of (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='( SUM([Imports Total]) / SUM([Total]) ) * 100' />
      </column>
      <column datatype='integer' name='[Exports Total]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Imports Total]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Total]' derivation='Sum' name='[pcdf:sum:Total:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Exports Total]' derivation='Sum' name='[sum:Exports Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Imports Total]' derivation='Sum' name='[sum:Imports Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.323415' measure-ordering='alphabetic' measure-percentage='0.676585' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10sstqr12u8i5z10y81vi0toajb7].[pcdf:sum:Total:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10sstqr12u8i5z10y81vi0toajb7].[sum:Exports Total:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10sstqr12u8i5z10y81vi0toajb7].[sum:Total:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.10sstqr12u8i5z10y81vi0toajb7].[sum:Imports Total:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Calculation_428967894022410242' />
        <field-sort-custom-order field='Month' />
        <field-sort-custom-order field='Calculation_428967894022176769' />
        <field-sort-custom-order field='Imports Full' />
        <field-sort-custom-order field='Imports Empty' />
        <field-sort-custom-order field='Imports Total' />
        <field-sort-custom-order field='Imports YoY' />
        <field-sort-custom-order field='Exports Full' />
        <field-sort-custom-order field='Exports Empty' />
        <field-sort-custom-order field='Exports Total' />
        <field-sort-custom-order field='Exports YoY' />
        <field-sort-custom-order field='Total Full' />
        <field-sort-custom-order field='Total Empty' />
        <field-sort-custom-order field='Total' />
        <field-sort-custom-order field='Total YoY' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='foreign-ports-lading'>
      <table>
        <view>
          <datasources>
            <datasource caption='port-of-lading-summary (savannah-unlading_2014-2018)' name='federated.1phuvdy1lq0m8w1h3bhw90cfl96s' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1phuvdy1lq0m8w1h3bhw90cfl96s'>
            <column datatype='string' name='[Country of Lading]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;China (Mainland)&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Fiji Islands&quot;' value='&quot;Fiji&quot;' />
                <semantic-value key='&quot;Netherland Antilles&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;St. Vincent &amp; Northern Grenadines&quot;' value='&quot;Saint Vincent and the Grenadines&quot;' />
                <semantic-value key='&quot;Venezuala&quot;' value='&quot;Venezuela&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Port of Lading]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Attalea&quot;' value='&quot;Antalya&quot;' />
                <semantic-value key='&quot;Banjer Masin&quot;' value='&quot;Banjarmasin&quot;' />
                <semantic-value key='&quot;Bathurst&quot;' value='&quot;Banjul&quot;' />
                <semantic-value key='&quot;Belize&quot;' value='&quot;Belize City&quot;' />
                <semantic-value key='&quot;Big Creek&quot;' value='&quot;Big Creek&quot;' />
                <semantic-value key='&quot;Cheju&quot;' value='&quot;Jeju&quot;' />
                <semantic-value key='&quot;Chibako&quot;' value='&quot;Chiba&quot;' />
                <semantic-value key='&quot;Colombo Harbor&quot;' value='&quot;Colombo&quot;' />
                <semantic-value key='&quot;Derindje&quot;' value='&quot;Derince&quot;' />
                <semantic-value key='&quot;El Djazair&quot;' value='&quot;Algiers&quot;' />
                <semantic-value key='&quot;Freeport&quot;' value='&quot;Freeport&quot;' />
                <semantic-value key='&quot;Hull&quot;' value='&quot;Hull&quot;' />
                <semantic-value key='&quot;Jiangyin&quot;' value='&quot;Changzhou Shi&quot;' />
                <semantic-value key='&quot;Jinsen&quot;' value='&quot;Incheon&quot;' />
                <semantic-value key='&quot;Kanokawa&quot;' value='&quot;Kanagawa-ku, Yokohama-shi&quot;' />
                <semantic-value key='&quot;Karachi Harbor&quot;' value='&quot;Karachi&quot;' />
                <semantic-value key='&quot;Khor al Ami&quot;' value='&quot;Kuwait City&quot;' />
                <semantic-value key='&quot;Kole Terminal&quot;' value='&quot;Douala&quot;' />
                <semantic-value key='&quot;Kristiansand S&quot;' value='&quot;Kristiansand&quot;' />
                <semantic-value key='&quot;Kunson&quot;' value='&quot;Gunsan&quot;' />
                <semantic-value key='&quot;La Coruna&quot;' value='&quot;Corunna&quot;' />
                <semantic-value key='&quot;Londonderry&quot;' value='&quot;Londonderry&quot;' />
                <semantic-value key='&quot;Military - Quingdau&quot;' value='&quot;Qingdao Shi&quot;' />
                <semantic-value key='&quot;Military - Yokohama&quot;' value='&quot;Kanagawa-ku, Yokohama-shi&quot;' />
                <semantic-value key='&quot;Mina Dumyat&quot;' value='&quot;Damietta&quot;' />
                <semantic-value key='&quot;Mina Zayed&quot;' value='&quot;Dubai&quot;' />
                <semantic-value key='&quot;Mizusima&quot;' value='&quot;Toyama-shi&quot;' />
                <semantic-value key='&quot;Nanticoke&quot;' value='&quot;Nanticoke&quot;' />
                <semantic-value key='&quot;Ningpo&quot;' value='&quot;Ningbo Shi&quot;' />
                <semantic-value key='&quot;North Atlantic (Maine to Cape Hatteras)&quot;' value='&quot;Hatteras&quot;' />
                <semantic-value key='&quot;Pakhoi&quot;' value='&quot;Beihai Shi&quot;' />
                <semantic-value key='&quot;Panama Canal - Caribbean&quot;' value='&quot;Panama City&quot;' />
                <semantic-value key='&quot;Pandjang&quot;' value='&quot;Bandar Lampung&quot;' />
                <semantic-value key='&quot;Philipsburgh&quot;' value='&quot;Philipsburg&quot;' />
                <semantic-value key='&quot;Pinang&quot;' value='&quot;Penang&quot;' />
                <semantic-value key='&quot;Port Arthur&quot;' value='&quot;Dalian Shi&quot;' />
                <semantic-value key='&quot;Port Bustamante&quot;' value='&quot;Port Royal&quot;' />
                <semantic-value key='&quot;Port Lyttelton&quot;' value='&quot;Lyttelton&quot;' />
                <semantic-value key='&quot;Port Natal&quot;' value='&quot;Durban&quot;' />
                <semantic-value key='&quot;Port Qasim&quot;' value='&quot;Karachi&quot;' />
                <semantic-value key='&quot;Puduchcheri&quot;' value='&quot;Puducherry&quot;' />
                <semantic-value key='&quot;Puerto Manzanillo&quot;' value='&quot;Manzanillo&quot;' />
                <semantic-value key='&quot;Qinhuangdao Gang&quot;' value='&quot;Qinhuangdao Shi&quot;' />
                <semantic-value key='&quot;Santa Barbara de Samana&quot;' value='&quot;Samana&quot;' />
                <semantic-value key='&quot;Sluiskill&quot;' value='&quot;Sluiskil&quot;' />
                <semantic-value key='&quot;Songkhla Harbor&quot;' value='&quot;Songkhla&quot;' />
                <semantic-value key='&quot;Soo&quot;' value='&quot;Sault Ste. Marie&quot;' />
                <semantic-value key='&quot;Sriracha&quot;' value='&quot;Si Racha&quot;' />
                <semantic-value key='&quot;St. Croix&quot;' value='&quot;Saint Croix&quot;' />
                <semantic-value key='&quot;Sultan Qaboos&quot;' value='&quot;Muscat&quot;' />
                <semantic-value key='&quot;Swatow&quot;' value='&quot;Shantou Shi&quot;' />
                <semantic-value key='&quot;Tallinn&quot;' value='&quot;Tallinn&quot;' />
                <semantic-value key='&quot;Tanjung Priok&quot;' value='&quot;Tipar&quot;' />
                <semantic-value key='&quot;Tarakan Island&quot;' value='&quot;Tarakan&quot;' />
                <semantic-value key='&quot;Thanh Pho Ho Chi Minh&quot;' value='&quot;Ho Chi Minh City&quot;' />
                <semantic-value key='&quot;Tourane&quot;' value='&quot;Da Nang&quot;' />
                <semantic-value key='&quot;Toyohasi&quot;' value='&quot;Toyohashi-shi&quot;' />
                <semantic-value key='&quot;Trincomali&quot;' value='&quot;Trincomalee&quot;' />
                <semantic-value key='&quot;Valencia Harvor&quot;' value='&quot;Knightstown&quot;' />
                <semantic-value key='&quot;Vegesack&quot;' value='&quot;Bremen&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Aalesund&quot;' value='62.472119999999997' />
                <semantic-value key='&quot;Apapa&quot;' value='6.4554280000000004' />
                <semantic-value key='&quot;Aratu&quot;' value='-12.778541000000001' />
                <semantic-value key='&quot;Bahia de Amuay&quot;' value='11.776904' />
                <semantic-value key='&quot;Bangor&quot;' value='53.227094999999998' />
                <semantic-value key='&quot;Barcadera&quot;' value='12.48315' />
                <semantic-value key='&quot;Bassens&quot;' value='44.907451999999999' />
                <semantic-value key='&quot;Bei Jao&quot;' value='22.928619000000001' />
                <semantic-value key='&quot;Beilun&quot;' value='29.906571' />
                <semantic-value key='&quot;Bell Bay&quot;' value='-41.13308' />
                <semantic-value key='&quot;Boca Chica&quot;' value='18.452537' />
                <semantic-value key='&quot;Bukhta Severnaya&quot;' value='42.934216999999997' />
                <semantic-value key='&quot;Cagayan de Oro&quot;' value='8.4896419999999999' />
                <semantic-value key='&quot;Caucedo&quot;' value='18.425775000000002' />
                <semantic-value key='&quot;Chiwan&quot;' value='22.460884' />
                <semantic-value key='&quot;Constantza&quot;' value='44.162775000000003' />
                <semantic-value key='&quot;Contrecoeur&quot;' value='45.863187000000003' />
                <semantic-value key='&quot;Dos Bocas&quot;' value='19.082697' />
                <semantic-value key='&quot;El Dekheila&quot;' value='31.125387' />
                <semantic-value key='&quot;Escombreras&quot;' value='37.559161000000003' />
                <semantic-value key='&quot;Fremantle&quot;' value='-32.057139999999997' />
                <semantic-value key='&quot;Fuzhou&quot;' value='26.057061000000001' />
                <semantic-value key='&quot;Gevle&quot;' value='60.676642000000001' />
                <semantic-value key='&quot;Gozo Island&quot;' value='36.042090000000002' />
                <semantic-value key='&quot;Hakata&quot;' value='33.610410000000002' />
                <semantic-value key='&quot;Hirohata&quot;' value='34.787025999999997' />
                <semantic-value key='&quot;Hitaki Ko&quot;' value='34.787025999999997' />
                <semantic-value key='&quot;Irvine Harbor&quot;' value='55.608159999999998' />
                <semantic-value key='&quot;Itajay&quot;' value='-26.912541000000001' />
                <semantic-value key='&quot;Jebel Ali&quot;' value='24.987984999999998' />
                <semantic-value key='&quot;Jorf Lasfar&quot;' value='33.155647999999999' />
                <semantic-value key='&quot;Judda&quot;' value='21.494458000000002' />
                <semantic-value key='&quot;Kaohsiung&quot;' value='22.673974000000001' />
                <semantic-value key='&quot;Kemlik&quot;' value='39.976376000000002' />
                <semantic-value key='&quot;Khor Fakkan&quot;' value='25.353408000000002' />
                <semantic-value key='&quot;King Abdul Aziz Port&quot;' value='26.474426000000001' />
                <semantic-value key='&quot;Kingston&quot;' value='44.230178000000002' />
                <semantic-value key='&quot;L&apos;Avera&quot;' value='43.388568999999997' />
                <semantic-value key='&quot;La Pampilla&quot;' value='-11.920743' />
                <semantic-value key='&quot;Laem Chabang&quot;' value='13.101851999999999' />
                <semantic-value key='&quot;Laguna de Chiriqui&quot;' value='9.0482990000000001' />
                <semantic-value key='&quot;Lazaro Cardenas&quot;' value='17.954609999999999' />
                <semantic-value key='&quot;Luda&quot;' value='22.310763999999999' />
                <semantic-value key='&quot;Mahahual&quot;' value='18.715810000000001' />
                <semantic-value key='&quot;Mamonal&quot;' value='10.312326000000001' />
                <semantic-value key='&quot;Military - Port Kelang&quot;' value='2.996632' />
                <semantic-value key='&quot;Moin&quot;' value='9.9924759999999999' />
                <semantic-value key='&quot;Moji&quot;' value='33.911963' />
                <semantic-value key='&quot;Mosel&quot;' value='43.268963999999997' />
                <semantic-value key='&quot;Munguba&quot;' value='-0.91625999999999996' />
                <semantic-value key='&quot;Mylaki&quot;' value='38.38353' />
                <semantic-value key='&quot;Nagoya Ko&quot;' value='35.084313999999999' />
                <semantic-value key='&quot;Nemrut Bay&quot;' value='38.744047000000002' />
                <semantic-value key='&quot;New Mangalore&quot;' value='12.947471999999999' />
                <semantic-value key='&quot;Nhava Sheva&quot;' value='18.949912999999999' />
                <semantic-value key='&quot;Ocho Rios&quot;' value='18.407342' />
                <semantic-value key='&quot;Pajaritos&quot;' value='20.557535000000001' />
                <semantic-value key='&quot;Panderma&quot;' value='40.353513' />
                <semantic-value key='&quot;Pasir Gudang&quot;' value='1.4660839999999999' />
                <semantic-value key='&quot;Penarth&quot;' value='51.445248999999997' />
                <semantic-value key='&quot;Piraievs&quot;' value='37.943368999999997' />
                <semantic-value key='&quot;Pohang Hang&quot;' value='36.029528999999997' />
                <semantic-value key='&quot;Point Lisas&quot;' value='10.407755999999999' />
                <semantic-value key='&quot;Point Tupper&quot;' value='45.606653000000001' />
                <semantic-value key='&quot;Pointe a Pierre&quot;' value='10.31551' />
                <semantic-value key='&quot;Port do Pecem&quot;' value='-3.5521180000000001' />
                <semantic-value key='&quot;Port Esquivel&quot;' value='17.893920999999999' />
                <semantic-value key='&quot;Port Kembla&quot;' value='-34.486659000000003' />
                <semantic-value key='&quot;Port Rashid&quot;' value='25.284811999999999' />
                <semantic-value key='&quot;Port Swettenham&quot;' value='2.9986890000000002' />
                <semantic-value key='&quot;Porto de Leixoes&quot;' value='41.183098000000001' />
                <semantic-value key='&quot;Portocel&quot;' value='-19.840129999999998' />
                <semantic-value key='&quot;Progreso&quot;' value='21.279890999999999' />
                <semantic-value key='&quot;Puerto Bolivar&quot;' value='12.219196' />
                <semantic-value key='&quot;Puerto de Lirquen&quot;' value='-36.715183000000003' />
                <semantic-value key='&quot;Puerto Henecan&quot;' value='13.404448' />
                <semantic-value key='&quot;Puerto Miranda&quot;' value='7.9043239999999999' />
                <semantic-value key='&quot;Puerto Nuevo&quot;' value='-2.283944' />
                <semantic-value key='&quot;Puerto Quetzal&quot;' value='13.929124' />
                <semantic-value key='&quot;Puerto Vargas&quot;' value='9.7312200000000004' />
                <semantic-value key='&quot;Pulum Bukum&quot;' value='1.234464' />
                <semantic-value key='&quot;Punta Morales&quot;' value='10.067382' />
                <semantic-value key='&quot;Pyungtaek&quot;' value='36.992193999999998' />
                <semantic-value key='&quot;Ras Al Khafji&quot;' value='28.428712999999998' />
                <semantic-value key='&quot;Ringaskiddy&quot;' value='51.830506999999997' />
                <semantic-value key='&quot;Rio Jaina&quot;' value='18.600787' />
                <semantic-value key='&quot;Ruwais&quot;' value='24.109658' />
                <semantic-value key='&quot;Samarai&quot;' value='-10.612055' />
                <semantic-value key='&quot;San Juan de Nieva&quot;' value='43.587783000000002' />
                <semantic-value key='&quot;San Lorenzo&quot;' value='-32.747911000000002' />
                <semantic-value key='&quot;Sangi&quot;' value='10.385949' />
                <semantic-value key='&quot;Santa Clara&quot;' value='-2.4248539999999998' />
                <semantic-value key='&quot;Santa Panagia&quot;' value='37.101041000000002' />
                <semantic-value key='&quot;Santo Tomas de Castilla&quot;' value='15.690427' />
                <semantic-value key='&quot;Sao Luiz de Maranhao&quot;' value='-2.5393650000000001' />
                <semantic-value key='&quot;Sarnia&quot;' value='42.974594000000003' />
                <semantic-value key='&quot;Saupe&quot;' value='-12.738681' />
                <semantic-value key='&quot;Savanna La Mar&quot;' value='18.229755000000001' />
                <semantic-value key='&quot;Selangor&quot;' value='3.3391470000000001' />
                <semantic-value key='&quot;Sepetiba Bay&quot;' value='-22.986329000000001' />
                <semantic-value key='&quot;Serangoon Harbor&quot;' value='1.3974340000000001' />
                <semantic-value key='&quot;Seven Islands&quot;' value='44.455103000000001' />
                <semantic-value key='&quot;Shekou&quot;' value='22.481929000000001' />
                <semantic-value key='&quot;Shellhaven&quot;' value='51.512303000000003' />
                <semantic-value key='&quot;Shilong&quot;' value='23.105274999999999' />
                <semantic-value key='&quot;Simizu&quot;' value='35.098028999999997' />
                <semantic-value key='&quot;Sinoe&quot;' value='5.0250640000000004' />
                <semantic-value key='&quot;South Riding Point&quot;' value='26.625854' />
                <semantic-value key='&quot;South Shetlands&quot;' value='-62.207858999999999' />
                <semantic-value key='&quot;Southhampton&quot;' value='50.909450999999997' />
                <semantic-value key='&quot;St. Ann&apos;s Bay&quot;' value='18.429884999999999' />
                <semantic-value key='&quot;St. Eustatius&quot;' value='52.054468' />
                <semantic-value key='&quot;St. Martin&quot;' value='18.081091000000001' />
                <semantic-value key='&quot;Stadersand&quot;' value='53.620538000000003' />
                <semantic-value key='&quot;Subic Bay&quot;' value='14.791409' />
                <semantic-value key='&quot;Sungei Pakning&quot;' value='1.3399970000000001' />
                <semantic-value key='&quot;Surabaya&quot;' value='-7.2595929999999997' />
                <semantic-value key='&quot;Susaka&quot;' value='44.508685' />
                <semantic-value key='&quot;Taichung&quot;' value='24.139690999999999' />
                <semantic-value key='&quot;Tanjung Pelepas&quot;' value='1.362382' />
                <semantic-value key='&quot;Tanjunguban&quot;' value='1.0615289999999999' />
                <semantic-value key='&quot;Teesport&quot;' value='54.610365999999999' />
                <semantic-value key='&quot;Teluk Bayur&quot;' value='-0.99244399999999999' />
                <semantic-value key='&quot;Tema&quot;' value='5.7346950000000003' />
                <semantic-value key='&quot;Tilbury&quot;' value='51.462698000000003' />
                <semantic-value key='&quot;Tin Can Island&quot;' value='6.4314200000000001' />
                <semantic-value key='&quot;Tobago&quot;' value='11.232821' />
                <semantic-value key='&quot;Trombetas&quot;' value='-7.399667' />
                <semantic-value key='&quot;Turiamo&quot;' value='10.442997999999999' />
                <semantic-value key='&quot;Tutunciftlik&quot;' value='40.761786999999998' />
                <semantic-value key='&quot;Uzunkum&quot;' value='37.817354999999999' />
                <semantic-value key='&quot;Vacamonte&quot;' value='8.910425' />
                <semantic-value key='&quot;Vaksdal&quot;' value='60.578510000000001' />
                <semantic-value key='&quot;Vallvik&quot;' value='61.184803000000002' />
                <semantic-value key='&quot;Victoria&quot;' value='48.428511999999998' />
                <semantic-value key='&quot;Vila do Conde&quot;' value='-1.5419860000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Aalesund&quot;' value='6.1499079999999999' />
                <semantic-value key='&quot;Apapa&quot;' value='3.3646500000000001' />
                <semantic-value key='&quot;Aratu&quot;' value='-38.497734999999999' />
                <semantic-value key='&quot;Bahia de Amuay&quot;' value='-70.242108000000002' />
                <semantic-value key='&quot;Bangor&quot;' value='-4.1282629999999996' />
                <semantic-value key='&quot;Barcadera&quot;' value='-69.990280999999996' />
                <semantic-value key='&quot;Bassens&quot;' value='-0.52819300000000002' />
                <semantic-value key='&quot;Bei Jao&quot;' value='113.208045' />
                <semantic-value key='&quot;Beilun&quot;' value='121.838385' />
                <semantic-value key='&quot;Bell Bay&quot;' value='146.85897800000001' />
                <semantic-value key='&quot;Boca Chica&quot;' value='-69.607164999999995' />
                <semantic-value key='&quot;Bukhta Severnaya&quot;' value='131.401184' />
                <semantic-value key='&quot;Cagayan de Oro&quot;' value='124.620439' />
                <semantic-value key='&quot;Caucedo&quot;' value='-69.630825999999999' />
                <semantic-value key='&quot;Chiwan&quot;' value='113.88923' />
                <semantic-value key='&quot;Constantza&quot;' value='28.636849000000002' />
                <semantic-value key='&quot;Contrecoeur&quot;' value='-73.251276000000004' />
                <semantic-value key='&quot;Dos Bocas&quot;' value='-96.146985000000001' />
                <semantic-value key='&quot;El Dekheila&quot;' value='29.812021999999999' />
                <semantic-value key='&quot;Escombreras&quot;' value='-0.96923999999999999' />
                <semantic-value key='&quot;Fremantle&quot;' value='115.743172' />
                <semantic-value key='&quot;Fuzhou&quot;' value='119.296423' />
                <semantic-value key='&quot;Gevle&quot;' value='17.142924000000001' />
                <semantic-value key='&quot;Gozo Island&quot;' value='14.252424' />
                <semantic-value key='&quot;Hakata&quot;' value='130.40307999999999' />
                <semantic-value key='&quot;Hirohata&quot;' value='135.40090000000001' />
                <semantic-value key='&quot;Hitaki Ko&quot;' value='135.40090000000001' />
                <semantic-value key='&quot;Irvine Harbor&quot;' value='-4.6887319999999999' />
                <semantic-value key='&quot;Itajay&quot;' value='-48.667282999999998' />
                <semantic-value key='&quot;Jebel Ali&quot;' value='55.022581000000002' />
                <semantic-value key='&quot;Jorf Lasfar&quot;' value='-8.6227920000000005' />
                <semantic-value key='&quot;Judda&quot;' value='39.171382999999999' />
                <semantic-value key='&quot;Kaohsiung&quot;' value='120.280269' />
                <semantic-value key='&quot;Kemlik&quot;' value='32.583550000000002' />
                <semantic-value key='&quot;Khor Fakkan&quot;' value='56.358727999999999' />
                <semantic-value key='&quot;King Abdul Aziz Port&quot;' value='50.192681' />
                <semantic-value key='&quot;Kingston&quot;' value='-76.488794999999996' />
                <semantic-value key='&quot;L&apos;Avera&quot;' value='5.0305689999999998' />
                <semantic-value key='&quot;La Pampilla&quot;' value='-77.140218000000004' />
                <semantic-value key='&quot;Laem Chabang&quot;' value='100.913264' />
                <semantic-value key='&quot;Laguna de Chiriqui&quot;' value='-82.081196000000006' />
                <semantic-value key='&quot;Lazaro Cardenas&quot;' value='-102.191582' />
                <semantic-value key='&quot;Luda&quot;' value='114.191295' />
                <semantic-value key='&quot;Mahahual&quot;' value='-87.707537000000002' />
                <semantic-value key='&quot;Mamonal&quot;' value='-75.501333000000002' />
                <semantic-value key='&quot;Military - Port Kelang&quot;' value='101.394172' />
                <semantic-value key='&quot;Moin&quot;' value='-83.094492000000002' />
                <semantic-value key='&quot;Moji&quot;' value='130.97021000000001' />
                <semantic-value key='&quot;Mosel&quot;' value='-2.9347590000000001' />
                <semantic-value key='&quot;Munguba&quot;' value='-52.44744' />
                <semantic-value key='&quot;Mylaki&quot;' value='24.061402000000001' />
                <semantic-value key='&quot;Nagoya Ko&quot;' value='136.883848' />
                <semantic-value key='&quot;Nemrut Bay&quot;' value='26.833552999999998' />
                <semantic-value key='&quot;New Mangalore&quot;' value='74.817625000000007' />
                <semantic-value key='&quot;Nhava Sheva&quot;' value='72.951025000000001' />
                <semantic-value key='&quot;Ocho Rios&quot;' value='-77.105808999999994' />
                <semantic-value key='&quot;Pajaritos&quot;' value='-97.474902' />
                <semantic-value key='&quot;Panderma&quot;' value='27.968993999999999' />
                <semantic-value key='&quot;Pasir Gudang&quot;' value='103.87198600000001' />
                <semantic-value key='&quot;Penarth&quot;' value='-3.1672250000000002' />
                <semantic-value key='&quot;Piraievs&quot;' value='23.643711' />
                <semantic-value key='&quot;Pohang Hang&quot;' value='129.37716399999999' />
                <semantic-value key='&quot;Point Lisas&quot;' value='-61.492524000000003' />
                <semantic-value key='&quot;Point Tupper&quot;' value='-61.352902' />
                <semantic-value key='&quot;Pointe a Pierre&quot;' value='-61.458786000000003' />
                <semantic-value key='&quot;Port do Pecem&quot;' value='-38.831755999999999' />
                <semantic-value key='&quot;Port Esquivel&quot;' value='-77.132018000000002' />
                <semantic-value key='&quot;Port Kembla&quot;' value='150.90251900000001' />
                <semantic-value key='&quot;Port Rashid&quot;' value='55.278204000000002' />
                <semantic-value key='&quot;Port Swettenham&quot;' value='101.391769' />
                <semantic-value key='&quot;Porto de Leixoes&quot;' value='-8.7028839999999992' />
                <semantic-value key='&quot;Portocel&quot;' value='-40.057651' />
                <semantic-value key='&quot;Progreso&quot;' value='-89.664766' />
                <semantic-value key='&quot;Puerto Bolivar&quot;' value='-71.999690000000001' />
                <semantic-value key='&quot;Puerto de Lirquen&quot;' value='-72.981358' />
                <semantic-value key='&quot;Puerto Henecan&quot;' value='-87.429236000000003' />
                <semantic-value key='&quot;Puerto Miranda&quot;' value='-67.478913000000006' />
                <semantic-value key='&quot;Puerto Nuevo&quot;' value='-78.897141000000005' />
                <semantic-value key='&quot;Puerto Quetzal&quot;' value='-90.761673999999999' />
                <semantic-value key='&quot;Puerto Vargas&quot;' value='-82.814772000000005' />
                <semantic-value key='&quot;Pulum Bukum&quot;' value='103.762342' />
                <semantic-value key='&quot;Punta Morales&quot;' value='-84.948671000000004' />
                <semantic-value key='&quot;Pyungtaek&quot;' value='127.085368' />
                <semantic-value key='&quot;Ras Al Khafji&quot;' value='48.49053' />
                <semantic-value key='&quot;Ringaskiddy&quot;' value='-8.3211759999999995' />
                <semantic-value key='&quot;Rio Jaina&quot;' value='-70.147318999999996' />
                <semantic-value key='&quot;Ruwais&quot;' value='52.721159999999998' />
                <semantic-value key='&quot;Samarai&quot;' value='150.66402099999999' />
                <semantic-value key='&quot;San Juan de Nieva&quot;' value='-5.9356070000000001' />
                <semantic-value key='&quot;San Lorenzo&quot;' value='-60.734498000000002' />
                <semantic-value key='&quot;Sangi&quot;' value='123.65241' />
                <semantic-value key='&quot;Santa Clara&quot;' value='-54.714204000000002' />
                <semantic-value key='&quot;Santa Panagia&quot;' value='15.269824' />
                <semantic-value key='&quot;Santo Tomas de Castilla&quot;' value='-88.620148999999998' />
                <semantic-value key='&quot;Sao Luiz de Maranhao&quot;' value='-44.286963' />
                <semantic-value key='&quot;Sarnia&quot;' value='-82.411687999999998' />
                <semantic-value key='&quot;Saupe&quot;' value='-38.612997' />
                <semantic-value key='&quot;Savanna La Mar&quot;' value='-78.139852000000005' />
                <semantic-value key='&quot;Selangor&quot;' value='101.560378' />
                <semantic-value key='&quot;Sepetiba Bay&quot;' value='-43.693316000000003' />
                <semantic-value key='&quot;Serangoon Harbor&quot;' value='103.94113400000001' />
                <semantic-value key='&quot;Seven Islands&quot;' value='-63.674892' />
                <semantic-value key='&quot;Shekou&quot;' value='113.919675' />
                <semantic-value key='&quot;Shellhaven&quot;' value='0.50248700000000002' />
                <semantic-value key='&quot;Shilong&quot;' value='113.874206' />
                <semantic-value key='&quot;Simizu&quot;' value='138.89828600000001' />
                <semantic-value key='&quot;Sinoe&quot;' value='-9.0406259999999996' />
                <semantic-value key='&quot;South Riding Point&quot;' value='-78.230118000000004' />
                <semantic-value key='&quot;South Shetlands&quot;' value='-58.691121000000003' />
                <semantic-value key='&quot;Southhampton&quot;' value='-1.403246' />
                <semantic-value key='&quot;St. Ann&apos;s Bay&quot;' value='-77.199562999999998' />
                <semantic-value key='&quot;St. Eustatius&quot;' value='4.5436209999999999' />
                <semantic-value key='&quot;St. Martin&quot;' value='-63.050814000000003' />
                <semantic-value key='&quot;Stadersand&quot;' value='9.5289560000000009' />
                <semantic-value key='&quot;Subic Bay&quot;' value='120.24220699999999' />
                <semantic-value key='&quot;Sungei Pakning&quot;' value='102.13534199999999' />
                <semantic-value key='&quot;Surabaya&quot;' value='112.754603' />
                <semantic-value key='&quot;Susaka&quot;' value='14.306426' />
                <semantic-value key='&quot;Taichung&quot;' value='120.661964' />
                <semantic-value key='&quot;Tanjung Pelepas&quot;' value='103.553287' />
                <semantic-value key='&quot;Tanjunguban&quot;' value='104.220911' />
                <semantic-value key='&quot;Teesport&quot;' value='-1.1508910000000001' />
                <semantic-value key='&quot;Teluk Bayur&quot;' value='100.383875' />
                <semantic-value key='&quot;Tema&quot;' value='0.031449999999999999' />
                <semantic-value key='&quot;Tilbury&quot;' value='0.36106100000000002' />
                <semantic-value key='&quot;Tin Can Island&quot;' value='3.3436370000000002' />
                <semantic-value key='&quot;Tobago&quot;' value='-60.696677999999999' />
                <semantic-value key='&quot;Trombetas&quot;' value='-72.416460000000001' />
                <semantic-value key='&quot;Turiamo&quot;' value='-67.846881999999994' />
                <semantic-value key='&quot;Tutunciftlik&quot;' value='29.747608' />
                <semantic-value key='&quot;Uzunkum&quot;' value='27.540198' />
                <semantic-value key='&quot;Vacamonte&quot;' value='-79.701948000000002' />
                <semantic-value key='&quot;Vaksdal&quot;' value='5.7711579999999998' />
                <semantic-value key='&quot;Vallvik&quot;' value='17.179285' />
                <semantic-value key='&quot;Victoria&quot;' value='-123.36634599999999' />
                <semantic-value key='&quot;Vila do Conde&quot;' value='-48.751131999999998' />
              </semantic-values>
            </column>
            <column-instance column='[Country of Lading]' derivation='None' name='[none:Country of Lading:nk]' pivot='key' type='nominal' />
            <column-instance column='[Port of Lading]' derivation='None' name='[none:Port of Lading:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[none:Port of Lading:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Aabenraa&quot;' function='range' level='[none:Port of Lading:nk]' to='&quot;Nombre de Dios&quot;' />
              <groupfilter from='&quot;Noumea&quot;' function='range' level='[none:Port of Lading:nk]' to='&quot;Zwyndrecht&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[none:Port of Lading:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[Longitude (generated)]' field-type='quantitative' max='23532428.147540297' min='-18673649.508196719' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[Latitude (generated)]' field-type='quantitative' max='12650324.324331859' min='-8937046.5422090385' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[none:Port of Lading:nk]' />
              <lod column='[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[none:Country of Lading:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[Latitude (generated)]</rows>
        <cols>[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{55FF99F1-D574-49AF-BF84-936AAB4A75F3}' />
    </worksheet>
    <worksheet name='imports-exports-month/year'>
      <table>
        <view>
          <datasources>
            <datasource caption='monthly-teu (savannah-unlading_2014-2018)' name='federated.10sstqr12u8i5z10y81vi0toajb7' />
          </datasources>
          <datasource-dependencies datasource='federated.10sstqr12u8i5z10y81vi0toajb7'>
            <column caption='Month Number' datatype='integer' name='[Calculation_428967894022176769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEPART(&apos;month&apos;,[Month])' />
            </column>
            <column caption='Month/year' datatype='date' name='[Calculation_428967894022410242]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(STR([Calculation_428967894022176769]) + &quot;/01/&quot; + STR([Year]))' />
            </column>
            <column datatype='date' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Total]' derivation='Sum' forecast-column-base='[sum:Total:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_428967894022410242]' derivation='Month-Trunc' name='[tmn:Calculation_428967894022410242:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.10sstqr12u8i5z10y81vi0toajb7].[tmn:Calculation_428967894022410242:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.10sstqr12u8i5z10y81vi0toajb7].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10sstqr12u8i5z10y81vi0toajb7].[tmn:Calculation_428967894022410242:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.10sstqr12u8i5z10y81vi0toajb7].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='98' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10sstqr12u8i5z10y81vi0toajb7].[tmn:Calculation_428967894022410242:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.10sstqr12u8i5z10y81vi0toajb7].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10sstqr12u8i5z10y81vi0toajb7].[fVal:sum:Total:qk]</rows>
        <cols>([federated.10sstqr12u8i5z10y81vi0toajb7].[tmn:Calculation_428967894022410242:qk] + [federated.10sstqr12u8i5z10y81vi0toajb7].[tmn:Calculation_428967894022410242:qk])</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A66F781C-1F0E-4464-A7AC-806F3E74CC2F}' />
    </worksheet>
    <worksheet name='imports-exports-share'>
      <table>
        <view>
          <datasources>
            <datasource caption='monthly-teu (savannah-unlading_2014-2018)' name='federated.10sstqr12u8i5z10y81vi0toajb7' />
          </datasources>
          <datasource-dependencies datasource='federated.10sstqr12u8i5z10y81vi0toajb7'>
            <column datatype='integer' name='[Exports Total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Imports Total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Exports Total]' derivation='Sum' name='[sum:Exports Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Imports Total]' derivation='Sum' name='[sum:Imports Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10sstqr12u8i5z10y81vi0toajb7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10sstqr12u8i5z10y81vi0toajb7].[sum:Exports Total:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10sstqr12u8i5z10y81vi0toajb7].[sum:Imports Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10sstqr12u8i5z10y81vi0toajb7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.10sstqr12u8i5z10y81vi0toajb7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10sstqr12u8i5z10y81vi0toajb7].[Multiple Values]</rows>
        <cols>[federated.10sstqr12u8i5z10y81vi0toajb7].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{042682EE-432F-49FE-AC08-62090BC535D2}' />
    </worksheet>
    <worksheet name='imports-exports_03-08'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Combined imports and exports of TEUs (twenty-foot-equivalent-unit, i.e., standard container)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='monthly-teu (savannah-unlading_2014-2018)' name='federated.10sstqr12u8i5z10y81vi0toajb7' />
          </datasources>
          <datasource-dependencies datasource='federated.10sstqr12u8i5z10y81vi0toajb7'>
            <column caption='Month Number' datatype='integer' name='[Calculation_428967894022176769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEPART(&apos;month&apos;,[Month])' />
            </column>
            <column caption='Month/year' datatype='date' name='[Calculation_428967894022410242]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(STR([Calculation_428967894022176769]) + &quot;/01/&quot; + STR([Year]))' />
            </column>
            <column datatype='date' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Total]' derivation='Sum' name='[pcdf:sum:Total:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_428967894022410242]' derivation='Year' name='[yr:Calculation_428967894022410242:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.10sstqr12u8i5z10y81vi0toajb7].[pcdf:sum:Total:qk]' />
              <text column='[federated.10sstqr12u8i5z10y81vi0toajb7].[sum:Total:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10sstqr12u8i5z10y81vi0toajb7].[sum:Total:qk]</rows>
        <cols>[federated.10sstqr12u8i5z10y81vi0toajb7].[yr:Calculation_428967894022410242:ok]</cols>
      </table>
      <simple-id uuid='{4966308E-7BCB-495C-947A-4399B0F23B30}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='imports-exports_03-08'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10sstqr12u8i5z10y81vi0toajb7].[yr:Calculation_428967894022410242:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7F0BDC4-AA39-4399-9834-9C91734CA334}' />
    </window>
    <window class='worksheet' name='imports-exports-share'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10sstqr12u8i5z10y81vi0toajb7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10sstqr12u8i5z10y81vi0toajb7].[:Measure Names]</field>
            <field>[federated.10sstqr12u8i5z10y81vi0toajb7].[none:Year:qk]</field>
            <field>[federated.10sstqr12u8i5z10y81vi0toajb7].[yr:Calculation_428967894022410242:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD29E7AF-F3AA-4634-A825-2481BB13BCCE}' />
    </window>
    <window class='worksheet' name='imports-exports-month/year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.10sstqr12u8i5z10y81vi0toajb7].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10sstqr12u8i5z10y81vi0toajb7].[yr:Calculation_428967894022410242:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4141F616-8883-4FEF-BC3F-367195621C50}' />
    </window>
    <window class='worksheet' maximized='true' name='foreign-ports-lading'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[none:Port of Lading:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{989B5C76-1E48-4BF1-B435-ADDEE7D8820C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='foreign-ports-lading' width='192'>
      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
      2cCCLwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='imports-exports-month/year' width='384'>
      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
    </thumbnail>
    <thumbnail height='192' name='imports-exports-share' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='imports-exports_03-08' width='384'>
      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
      m5tLp06diI6O5sqVK8yZMwcfHx8yMzOZN28evXr1clTFuLm58dJLL3Hfffdht9txc3Nj/Pjx
      REREANC8eXPGjRvnqKpRFIXi4mKee+45+vTpQ7169QAcVT+XLl3is88+IygoyHGFUVBQgKqq
      FBQUMG3aNMd2blxHURSWL1/OunXrePHFFwFYu3Yt/fv3/91EKkJUNPlEigqnKAofffQROTk5
      DBo0CLg+gYnJZKK4uJgZM2bg4eGBVqvF39+f3bt3c+7cOYKCgrh48SKqqqIoChkZGaxatQo3
      Nze0Wi3BwcGO6qKQkJCbRrO02+18+umnjB49mu7du2OxWLh8+TLR0dH4+fnRtWtXDAYDVqsV
      m82G1WolKioKT09Punfvjt1uJzc3l+zsbKxWK3a7HavVyoULF9i/fz/vvvsuXl5eXLt2jVOn
      TtG1a9eKeGuFuC0JAFHhtm7dilar5fnnn8fNzY2UlBSCg4Px8/OjY8eOmM1mcnJyyMjIICEh
      gVq1atGtWzeSk5NJT0+noKCA1NRUioqKeP/99/Hw8CA9PR2r1XrL/+x2OzabjaioKHbu3Mkn
      n3zChg0b+J//+R86d+6Mu7s7S5YsYfjw4Xz55ZeYzWYWLVpEQEAALVu2ZM6cOYwZM4Z58+aR
      mJjIggULHOtkZmYSFBTEnDlzWLduHUVFRYwdO1aGUhaVknwqRYXz9vamuLiY2bNn06xZM7Zt
      28b777/Pfffdx/z583n55ZcpLCxk1qxZjB49mtjYWGJjY0lKSkKr1bJgwQLatGnD2bNn+f77
      7+nYsSN6vZ65c+ei0Wj48ssvqVKlCqdPn+bs2bMEBwfTsGFDxo4d6yjDpUuX6NGjB3q9nmee
      eQa4fmVSv379m8r6yCOP8Mgjj2C329HpdDRq1Ii4uLib1unUqdNNy3Xq1Cmnd06Iv0cCQFS4
      zp0707lzZ+B6HXyrVq3w8/OjV69e9OrVC0VRUFWVWbNm3fS66Oho7HY7/fr1IyYm5qZqFkVR
      mDJlyl2XISoq6qbX/pGy57RaLTExMXe9fSEqIwkAUakEBgY6piG80R+dlDUajVO6Vv565grJ
      V/L+9nZ+y8fLnfva1nP6doVwBgkAUalcyS5i38k/P4DbnejddfTv2OAPn/8lMY2fD110+n6r
      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
    </thumbnail>
  </thumbnails>
</workbook>
