<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0213.2333                               -->
<workbook original-version='18.1' source-build='2019.1.0 (20191.19.0213.2333)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='port-of-lading-summary (savannah-unlading_2014-2018)' inline='true' name='federated.1phuvdy1lq0m8w1h3bhw90cfl96s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='savannah-unlading_2014-2018' name='excel-direct.0yhm0kx1yhvyj614xwj5o0tofxdc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/mainzer_work/Desktop/projects/savannah-harbor-narrative/data/unlading-data/savannah-unlading_2014-2018.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0yhm0kx1yhvyj614xwj5o0tofxdc' name='port-of-lading-summary' table='[&apos;port-of-lading-summary$&apos;]' type='table'>
          <columns gridOrigin='A1:E1910:no:A1:E1910:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Port of Lading' ordinal='1' />
            <column datatype='string' name='Country of Lading' ordinal='2' />
            <column datatype='integer' name='Shipments' ordinal='3' />
            <column datatype='integer' name='Containers' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[port-of-lading-summary]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Port of Lading</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Port of Lading]</local-name>
            <parent-name>[port-of-lading-summary]</parent-name>
            <remote-alias>Port of Lading</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country of Lading</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country of Lading]</local-name>
            <parent-name>[port-of-lading-summary]</parent-name>
            <remote-alias>Country of Lading</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipments</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Shipments]</local-name>
            <parent-name>[port-of-lading-summary]</parent-name>
            <remote-alias>Shipments</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Containers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Containers]</local-name>
            <parent-name>[port-of-lading-summary]</parent-name>
            <remote-alias>Containers</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[port-of-lading-summary]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E1910:no:A1:E1910:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country of Lading]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;China (Mainland)&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;Fiji Islands&quot;' value='&quot;Fiji&quot;' />
          <semantic-value key='&quot;Netherland Antilles&quot;' value='&quot;Netherlands&quot;' />
          <semantic-value key='&quot;St. Vincent &amp; Northern Grenadines&quot;' value='&quot;Saint Vincent and the Grenadines&quot;' />
          <semantic-value key='&quot;Venezuala&quot;' value='&quot;Venezuela&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Port of Lading]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Aalesund&quot;' value='62.472119999999997' />
          <semantic-value key='&quot;Apapa&quot;' value='6.4554280000000004' />
          <semantic-value key='&quot;Aratu&quot;' value='-12.778541000000001' />
          <semantic-value key='&quot;Bahia de Amuay&quot;' value='11.776904' />
          <semantic-value key='&quot;Bangor&quot;' value='53.227094999999998' />
          <semantic-value key='&quot;Barcadera&quot;' value='12.48315' />
          <semantic-value key='&quot;Bassens&quot;' value='44.907451999999999' />
          <semantic-value key='&quot;Bei Jao&quot;' value='22.928619000000001' />
          <semantic-value key='&quot;Beilun&quot;' value='29.906571' />
          <semantic-value key='&quot;Bell Bay&quot;' value='-41.13308' />
          <semantic-value key='&quot;Boca Chica&quot;' value='18.452537' />
          <semantic-value key='&quot;Bukhta Severnaya&quot;' value='42.934216999999997' />
          <semantic-value key='&quot;Cagayan de Oro&quot;' value='8.4896419999999999' />
          <semantic-value key='&quot;Caucedo&quot;' value='18.425775000000002' />
          <semantic-value key='&quot;Chiwan&quot;' value='22.460884' />
          <semantic-value key='&quot;Constantza&quot;' value='44.162775000000003' />
          <semantic-value key='&quot;Contrecoeur&quot;' value='45.863187000000003' />
          <semantic-value key='&quot;Dos Bocas&quot;' value='19.082697' />
          <semantic-value key='&quot;El Dekheila&quot;' value='31.125387' />
          <semantic-value key='&quot;Escombreras&quot;' value='37.559161000000003' />
          <semantic-value key='&quot;Fremantle&quot;' value='-32.057139999999997' />
          <semantic-value key='&quot;Fuzhou&quot;' value='26.057061000000001' />
          <semantic-value key='&quot;Gevle&quot;' value='60.676642000000001' />
          <semantic-value key='&quot;Gozo Island&quot;' value='36.042090000000002' />
          <semantic-value key='&quot;Hakata&quot;' value='33.610410000000002' />
          <semantic-value key='&quot;Hirohata&quot;' value='34.787025999999997' />
          <semantic-value key='&quot;Hitaki Ko&quot;' value='34.787025999999997' />
          <semantic-value key='&quot;Irvine Harbor&quot;' value='55.608159999999998' />
          <semantic-value key='&quot;Itajay&quot;' value='-26.912541000000001' />
          <semantic-value key='&quot;Jebel Ali&quot;' value='24.987984999999998' />
          <semantic-value key='&quot;Jorf Lasfar&quot;' value='33.155647999999999' />
          <semantic-value key='&quot;Judda&quot;' value='21.494458000000002' />
          <semantic-value key='&quot;Kaohsiung&quot;' value='22.673974000000001' />
          <semantic-value key='&quot;Kemlik&quot;' value='39.976376000000002' />
          <semantic-value key='&quot;Khor Fakkan&quot;' value='25.353408000000002' />
          <semantic-value key='&quot;King Abdul Aziz Port&quot;' value='26.474426000000001' />
          <semantic-value key='&quot;Kingston&quot;' value='44.230178000000002' />
          <semantic-value key='&quot;L&apos;Avera&quot;' value='43.388568999999997' />
          <semantic-value key='&quot;La Pampilla&quot;' value='-11.920743' />
          <semantic-value key='&quot;Laem Chabang&quot;' value='13.101851999999999' />
          <semantic-value key='&quot;Laguna de Chiriqui&quot;' value='9.0482990000000001' />
          <semantic-value key='&quot;Lazaro Cardenas&quot;' value='17.954609999999999' />
          <semantic-value key='&quot;Luda&quot;' value='22.310763999999999' />
          <semantic-value key='&quot;Mahahual&quot;' value='18.715810000000001' />
          <semantic-value key='&quot;Mamonal&quot;' value='10.312326000000001' />
          <semantic-value key='&quot;Military - Port Kelang&quot;' value='2.996632' />
          <semantic-value key='&quot;Moin&quot;' value='9.9924759999999999' />
          <semantic-value key='&quot;Moji&quot;' value='33.911963' />
          <semantic-value key='&quot;Mosel&quot;' value='43.268963999999997' />
          <semantic-value key='&quot;Munguba&quot;' value='-0.91625999999999996' />
          <semantic-value key='&quot;Mylaki&quot;' value='38.38353' />
          <semantic-value key='&quot;Nagoya Ko&quot;' value='35.084313999999999' />
          <semantic-value key='&quot;Nemrut Bay&quot;' value='38.744047000000002' />
          <semantic-value key='&quot;New Mangalore&quot;' value='12.947471999999999' />
          <semantic-value key='&quot;Nhava Sheva&quot;' value='18.949912999999999' />
          <semantic-value key='&quot;Ocho Rios&quot;' value='18.407342' />
          <semantic-value key='&quot;Pajaritos&quot;' value='20.557535000000001' />
          <semantic-value key='&quot;Panderma&quot;' value='40.353513' />
          <semantic-value key='&quot;Pasir Gudang&quot;' value='1.4660839999999999' />
          <semantic-value key='&quot;Penarth&quot;' value='51.445248999999997' />
          <semantic-value key='&quot;Piraievs&quot;' value='37.943368999999997' />
          <semantic-value key='&quot;Pohang Hang&quot;' value='36.029528999999997' />
          <semantic-value key='&quot;Point Lisas&quot;' value='10.407755999999999' />
          <semantic-value key='&quot;Point Tupper&quot;' value='45.606653000000001' />
          <semantic-value key='&quot;Pointe a Pierre&quot;' value='10.31551' />
          <semantic-value key='&quot;Port do Pecem&quot;' value='-3.5521180000000001' />
          <semantic-value key='&quot;Port Esquivel&quot;' value='17.893920999999999' />
          <semantic-value key='&quot;Port Kembla&quot;' value='-34.486659000000003' />
          <semantic-value key='&quot;Port Rashid&quot;' value='25.284811999999999' />
          <semantic-value key='&quot;Port Swettenham&quot;' value='2.9986890000000002' />
          <semantic-value key='&quot;Porto de Leixoes&quot;' value='41.183098000000001' />
          <semantic-value key='&quot;Portocel&quot;' value='-19.840129999999998' />
          <semantic-value key='&quot;Progreso&quot;' value='21.279890999999999' />
          <semantic-value key='&quot;Puerto Bolivar&quot;' value='12.219196' />
          <semantic-value key='&quot;Puerto de Lirquen&quot;' value='-36.715183000000003' />
          <semantic-value key='&quot;Puerto Henecan&quot;' value='13.404448' />
          <semantic-value key='&quot;Puerto Miranda&quot;' value='7.9043239999999999' />
          <semantic-value key='&quot;Puerto Nuevo&quot;' value='-2.283944' />
          <semantic-value key='&quot;Puerto Quetzal&quot;' value='13.929124' />
          <semantic-value key='&quot;Puerto Vargas&quot;' value='9.7312200000000004' />
          <semantic-value key='&quot;Pulum Bukum&quot;' value='1.234464' />
          <semantic-value key='&quot;Punta Morales&quot;' value='10.067382' />
          <semantic-value key='&quot;Pyungtaek&quot;' value='36.992193999999998' />
          <semantic-value key='&quot;Ras Al Khafji&quot;' value='28.428712999999998' />
          <semantic-value key='&quot;Ringaskiddy&quot;' value='51.830506999999997' />
          <semantic-value key='&quot;Rio Jaina&quot;' value='18.600787' />
          <semantic-value key='&quot;Ruwais&quot;' value='24.109658' />
          <semantic-value key='&quot;Samarai&quot;' value='-10.612055' />
          <semantic-value key='&quot;San Juan de Nieva&quot;' value='43.587783000000002' />
          <semantic-value key='&quot;San Lorenzo&quot;' value='-32.747911000000002' />
          <semantic-value key='&quot;Sangi&quot;' value='10.385949' />
          <semantic-value key='&quot;Santa Clara&quot;' value='-2.4248539999999998' />
          <semantic-value key='&quot;Santa Panagia&quot;' value='37.101041000000002' />
          <semantic-value key='&quot;Santo Tomas de Castilla&quot;' value='15.690427' />
          <semantic-value key='&quot;Sao Luiz de Maranhao&quot;' value='-2.5393650000000001' />
          <semantic-value key='&quot;Sarnia&quot;' value='42.974594000000003' />
          <semantic-value key='&quot;Saupe&quot;' value='-12.738681' />
          <semantic-value key='&quot;Savanna La Mar&quot;' value='18.229755000000001' />
          <semantic-value key='&quot;Selangor&quot;' value='3.3391470000000001' />
          <semantic-value key='&quot;Sepetiba Bay&quot;' value='-22.986329000000001' />
          <semantic-value key='&quot;Serangoon Harbor&quot;' value='1.3974340000000001' />
          <semantic-value key='&quot;Seven Islands&quot;' value='44.455103000000001' />
          <semantic-value key='&quot;Shekou&quot;' value='22.481929000000001' />
          <semantic-value key='&quot;Shellhaven&quot;' value='51.512303000000003' />
          <semantic-value key='&quot;Shilong&quot;' value='23.105274999999999' />
          <semantic-value key='&quot;Simizu&quot;' value='35.098028999999997' />
          <semantic-value key='&quot;Sinoe&quot;' value='5.0250640000000004' />
          <semantic-value key='&quot;South Riding Point&quot;' value='26.625854' />
          <semantic-value key='&quot;South Shetlands&quot;' value='-62.207858999999999' />
          <semantic-value key='&quot;Southhampton&quot;' value='50.909450999999997' />
          <semantic-value key='&quot;St. Ann&apos;s Bay&quot;' value='18.429884999999999' />
          <semantic-value key='&quot;St. Eustatius&quot;' value='52.054468' />
          <semantic-value key='&quot;St. Martin&quot;' value='18.081091000000001' />
          <semantic-value key='&quot;Stadersand&quot;' value='53.620538000000003' />
          <semantic-value key='&quot;Subic Bay&quot;' value='14.791409' />
          <semantic-value key='&quot;Sungei Pakning&quot;' value='1.3399970000000001' />
          <semantic-value key='&quot;Surabaya&quot;' value='-7.2595929999999997' />
          <semantic-value key='&quot;Susaka&quot;' value='44.508685' />
          <semantic-value key='&quot;Taichung&quot;' value='24.139690999999999' />
          <semantic-value key='&quot;Tanjung Pelepas&quot;' value='1.362382' />
          <semantic-value key='&quot;Tanjunguban&quot;' value='1.0615289999999999' />
          <semantic-value key='&quot;Teesport&quot;' value='54.610365999999999' />
          <semantic-value key='&quot;Teluk Bayur&quot;' value='-0.99244399999999999' />
          <semantic-value key='&quot;Tema&quot;' value='5.7346950000000003' />
          <semantic-value key='&quot;Tilbury&quot;' value='51.462698000000003' />
          <semantic-value key='&quot;Tin Can Island&quot;' value='6.4314200000000001' />
          <semantic-value key='&quot;Tobago&quot;' value='11.232821' />
          <semantic-value key='&quot;Trombetas&quot;' value='-7.399667' />
          <semantic-value key='&quot;Turiamo&quot;' value='10.442997999999999' />
          <semantic-value key='&quot;Tutunciftlik&quot;' value='40.761786999999998' />
          <semantic-value key='&quot;Uzunkum&quot;' value='37.817354999999999' />
          <semantic-value key='&quot;Vacamonte&quot;' value='8.910425' />
          <semantic-value key='&quot;Vaksdal&quot;' value='60.578510000000001' />
          <semantic-value key='&quot;Vallvik&quot;' value='61.184803000000002' />
          <semantic-value key='&quot;Victoria&quot;' value='48.428511999999998' />
          <semantic-value key='&quot;Vila do Conde&quot;' value='-1.5419860000000001' />
          <semantic-value key='&quot;Vila Real de San Antonio&quot;' value='37.194201999999997' />
          <semantic-value key='&quot;Villequier&quot;' value='49.512703000000002' />
          <semantic-value key='&quot;Villeta&quot;' value='-25.507593' />
          <semantic-value key='&quot;Vinaroz&quot;' value='40.468581' />
          <semantic-value key='&quot;Vunda Point&quot;' value='-17.680088000000001' />
          <semantic-value key='&quot;Whale Cay&quot;' value='25.403051999999999' />
          <semantic-value key='&quot;Whampoa&quot;' value='23.084468999999999' />
          <semantic-value key='&quot;Wilsons Beach&quot;' value='44.932456999999999' />
          <semantic-value key='&quot;Xcalac&quot;' value='18.271056000000002' />
          <semantic-value key='&quot;Xingang&quot;' value='39.002934000000003' />
          <semantic-value key='&quot;Yandina&quot;' value='-9.0795949999999994' />
          <semantic-value key='&quot;Yantian&quot;' value='22.589849000000001' />
          <semantic-value key='&quot;Yarimca&quot;' value='40.764625000000002' />
          <semantic-value key='&quot;Yarmouth Harbor&quot;' value='50.705174' />
          <semantic-value key='&quot;Yarraville&quot;' value='-37.817494000000003' />
          <semantic-value key='&quot;Yentai&quot;' value='37.472777999999998' />
          <semantic-value key='&quot;Yerakini&quot;' value='40.278911000000001' />
          <semantic-value key='&quot;Yura&quot;' value='33.972456999999999' />
          <semantic-value key='&quot;Zeebrugge&quot;' value='51.319737000000003' />
          <semantic-value key='&quot;Zirku Island&quot;' value='24.879750000000001' />
          <semantic-value key='&quot;Zwyndrecht&quot;' value='51.215713999999998' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Aalesund&quot;' value='6.1499079999999999' />
          <semantic-value key='&quot;Apapa&quot;' value='3.3646500000000001' />
          <semantic-value key='&quot;Aratu&quot;' value='-38.497734999999999' />
          <semantic-value key='&quot;Bahia de Amuay&quot;' value='-70.242108000000002' />
          <semantic-value key='&quot;Bangor&quot;' value='-4.1282629999999996' />
          <semantic-value key='&quot;Barcadera&quot;' value='-69.990280999999996' />
          <semantic-value key='&quot;Bassens&quot;' value='-0.52819300000000002' />
          <semantic-value key='&quot;Bei Jao&quot;' value='113.208045' />
          <semantic-value key='&quot;Beilun&quot;' value='121.838385' />
          <semantic-value key='&quot;Bell Bay&quot;' value='146.85897800000001' />
          <semantic-value key='&quot;Boca Chica&quot;' value='-69.607164999999995' />
          <semantic-value key='&quot;Bukhta Severnaya&quot;' value='131.401184' />
          <semantic-value key='&quot;Cagayan de Oro&quot;' value='124.620439' />
          <semantic-value key='&quot;Caucedo&quot;' value='-69.630825999999999' />
          <semantic-value key='&quot;Chiwan&quot;' value='113.88923' />
          <semantic-value key='&quot;Constantza&quot;' value='28.636849000000002' />
          <semantic-value key='&quot;Contrecoeur&quot;' value='-73.251276000000004' />
          <semantic-value key='&quot;Dos Bocas&quot;' value='-96.146985000000001' />
          <semantic-value key='&quot;El Dekheila&quot;' value='29.812021999999999' />
          <semantic-value key='&quot;Escombreras&quot;' value='-0.96923999999999999' />
          <semantic-value key='&quot;Fremantle&quot;' value='115.743172' />
          <semantic-value key='&quot;Fuzhou&quot;' value='119.296423' />
          <semantic-value key='&quot;Gevle&quot;' value='17.142924000000001' />
          <semantic-value key='&quot;Gozo Island&quot;' value='14.252424' />
          <semantic-value key='&quot;Hakata&quot;' value='130.40307999999999' />
          <semantic-value key='&quot;Hirohata&quot;' value='135.40090000000001' />
          <semantic-value key='&quot;Hitaki Ko&quot;' value='135.40090000000001' />
          <semantic-value key='&quot;Irvine Harbor&quot;' value='-4.6887319999999999' />
          <semantic-value key='&quot;Itajay&quot;' value='-48.667282999999998' />
          <semantic-value key='&quot;Jebel Ali&quot;' value='55.022581000000002' />
          <semantic-value key='&quot;Jorf Lasfar&quot;' value='-8.6227920000000005' />
          <semantic-value key='&quot;Judda&quot;' value='39.171382999999999' />
          <semantic-value key='&quot;Kaohsiung&quot;' value='120.280269' />
          <semantic-value key='&quot;Kemlik&quot;' value='32.583550000000002' />
          <semantic-value key='&quot;Khor Fakkan&quot;' value='56.358727999999999' />
          <semantic-value key='&quot;King Abdul Aziz Port&quot;' value='50.192681' />
          <semantic-value key='&quot;Kingston&quot;' value='-76.488794999999996' />
          <semantic-value key='&quot;L&apos;Avera&quot;' value='5.0305689999999998' />
          <semantic-value key='&quot;La Pampilla&quot;' value='-77.140218000000004' />
          <semantic-value key='&quot;Laem Chabang&quot;' value='100.913264' />
          <semantic-value key='&quot;Laguna de Chiriqui&quot;' value='-82.081196000000006' />
          <semantic-value key='&quot;Lazaro Cardenas&quot;' value='-102.191582' />
          <semantic-value key='&quot;Luda&quot;' value='114.191295' />
          <semantic-value key='&quot;Mahahual&quot;' value='-87.707537000000002' />
          <semantic-value key='&quot;Mamonal&quot;' value='-75.501333000000002' />
          <semantic-value key='&quot;Military - Port Kelang&quot;' value='101.394172' />
          <semantic-value key='&quot;Moin&quot;' value='-83.094492000000002' />
          <semantic-value key='&quot;Moji&quot;' value='130.97021000000001' />
          <semantic-value key='&quot;Mosel&quot;' value='-2.9347590000000001' />
          <semantic-value key='&quot;Munguba&quot;' value='-52.44744' />
          <semantic-value key='&quot;Mylaki&quot;' value='24.061402000000001' />
          <semantic-value key='&quot;Nagoya Ko&quot;' value='136.883848' />
          <semantic-value key='&quot;Nemrut Bay&quot;' value='26.833552999999998' />
          <semantic-value key='&quot;New Mangalore&quot;' value='74.817625000000007' />
          <semantic-value key='&quot;Nhava Sheva&quot;' value='72.951025000000001' />
          <semantic-value key='&quot;Ocho Rios&quot;' value='-77.105808999999994' />
          <semantic-value key='&quot;Pajaritos&quot;' value='-97.474902' />
          <semantic-value key='&quot;Panderma&quot;' value='27.968993999999999' />
          <semantic-value key='&quot;Pasir Gudang&quot;' value='103.87198600000001' />
          <semantic-value key='&quot;Penarth&quot;' value='-3.1672250000000002' />
          <semantic-value key='&quot;Piraievs&quot;' value='23.643711' />
          <semantic-value key='&quot;Pohang Hang&quot;' value='129.37716399999999' />
          <semantic-value key='&quot;Point Lisas&quot;' value='-61.492524000000003' />
          <semantic-value key='&quot;Point Tupper&quot;' value='-61.352902' />
          <semantic-value key='&quot;Pointe a Pierre&quot;' value='-61.458786000000003' />
          <semantic-value key='&quot;Port do Pecem&quot;' value='-38.831755999999999' />
          <semantic-value key='&quot;Port Esquivel&quot;' value='-77.132018000000002' />
          <semantic-value key='&quot;Port Kembla&quot;' value='150.90251900000001' />
          <semantic-value key='&quot;Port Rashid&quot;' value='55.278204000000002' />
          <semantic-value key='&quot;Port Swettenham&quot;' value='101.391769' />
          <semantic-value key='&quot;Porto de Leixoes&quot;' value='-8.7028839999999992' />
          <semantic-value key='&quot;Portocel&quot;' value='-40.057651' />
          <semantic-value key='&quot;Progreso&quot;' value='-89.664766' />
          <semantic-value key='&quot;Puerto Bolivar&quot;' value='-71.999690000000001' />
          <semantic-value key='&quot;Puerto de Lirquen&quot;' value='-72.981358' />
          <semantic-value key='&quot;Puerto Henecan&quot;' value='-87.429236000000003' />
          <semantic-value key='&quot;Puerto Miranda&quot;' value='-67.478913000000006' />
          <semantic-value key='&quot;Puerto Nuevo&quot;' value='-78.897141000000005' />
          <semantic-value key='&quot;Puerto Quetzal&quot;' value='-90.761673999999999' />
          <semantic-value key='&quot;Puerto Vargas&quot;' value='-82.814772000000005' />
          <semantic-value key='&quot;Pulum Bukum&quot;' value='103.762342' />
          <semantic-value key='&quot;Punta Morales&quot;' value='-84.948671000000004' />
          <semantic-value key='&quot;Pyungtaek&quot;' value='127.085368' />
          <semantic-value key='&quot;Ras Al Khafji&quot;' value='48.49053' />
          <semantic-value key='&quot;Ringaskiddy&quot;' value='-8.3211759999999995' />
          <semantic-value key='&quot;Rio Jaina&quot;' value='-70.147318999999996' />
          <semantic-value key='&quot;Ruwais&quot;' value='52.721159999999998' />
          <semantic-value key='&quot;Samarai&quot;' value='150.66402099999999' />
          <semantic-value key='&quot;San Juan de Nieva&quot;' value='-5.9356070000000001' />
          <semantic-value key='&quot;San Lorenzo&quot;' value='-60.734498000000002' />
          <semantic-value key='&quot;Sangi&quot;' value='123.65241' />
          <semantic-value key='&quot;Santa Clara&quot;' value='-54.714204000000002' />
          <semantic-value key='&quot;Santa Panagia&quot;' value='15.269824' />
          <semantic-value key='&quot;Santo Tomas de Castilla&quot;' value='-88.620148999999998' />
          <semantic-value key='&quot;Sao Luiz de Maranhao&quot;' value='-44.286963' />
          <semantic-value key='&quot;Sarnia&quot;' value='-82.411687999999998' />
          <semantic-value key='&quot;Saupe&quot;' value='-38.612997' />
          <semantic-value key='&quot;Savanna La Mar&quot;' value='-78.139852000000005' />
          <semantic-value key='&quot;Selangor&quot;' value='101.560378' />
          <semantic-value key='&quot;Sepetiba Bay&quot;' value='-43.693316000000003' />
          <semantic-value key='&quot;Serangoon Harbor&quot;' value='103.94113400000001' />
          <semantic-value key='&quot;Seven Islands&quot;' value='-63.674892' />
          <semantic-value key='&quot;Shekou&quot;' value='113.919675' />
          <semantic-value key='&quot;Shellhaven&quot;' value='0.50248700000000002' />
          <semantic-value key='&quot;Shilong&quot;' value='113.874206' />
          <semantic-value key='&quot;Simizu&quot;' value='138.89828600000001' />
          <semantic-value key='&quot;Sinoe&quot;' value='-9.0406259999999996' />
          <semantic-value key='&quot;South Riding Point&quot;' value='-78.230118000000004' />
          <semantic-value key='&quot;South Shetlands&quot;' value='-58.691121000000003' />
          <semantic-value key='&quot;Southhampton&quot;' value='-1.403246' />
          <semantic-value key='&quot;St. Ann&apos;s Bay&quot;' value='-77.199562999999998' />
          <semantic-value key='&quot;St. Eustatius&quot;' value='4.5436209999999999' />
          <semantic-value key='&quot;St. Martin&quot;' value='-63.050814000000003' />
          <semantic-value key='&quot;Stadersand&quot;' value='9.5289560000000009' />
          <semantic-value key='&quot;Subic Bay&quot;' value='120.24220699999999' />
          <semantic-value key='&quot;Sungei Pakning&quot;' value='102.13534199999999' />
          <semantic-value key='&quot;Surabaya&quot;' value='112.754603' />
          <semantic-value key='&quot;Susaka&quot;' value='14.306426' />
          <semantic-value key='&quot;Taichung&quot;' value='120.661964' />
          <semantic-value key='&quot;Tanjung Pelepas&quot;' value='103.553287' />
          <semantic-value key='&quot;Tanjunguban&quot;' value='104.220911' />
          <semantic-value key='&quot;Teesport&quot;' value='-1.1508910000000001' />
          <semantic-value key='&quot;Teluk Bayur&quot;' value='100.383875' />
          <semantic-value key='&quot;Tema&quot;' value='0.031449999999999999' />
          <semantic-value key='&quot;Tilbury&quot;' value='0.36106100000000002' />
          <semantic-value key='&quot;Tin Can Island&quot;' value='3.3436370000000002' />
          <semantic-value key='&quot;Tobago&quot;' value='-60.696677999999999' />
          <semantic-value key='&quot;Trombetas&quot;' value='-72.416460000000001' />
          <semantic-value key='&quot;Turiamo&quot;' value='-67.846881999999994' />
          <semantic-value key='&quot;Tutunciftlik&quot;' value='29.747608' />
          <semantic-value key='&quot;Uzunkum&quot;' value='27.540198' />
          <semantic-value key='&quot;Vacamonte&quot;' value='-79.701948000000002' />
          <semantic-value key='&quot;Vaksdal&quot;' value='5.7711579999999998' />
          <semantic-value key='&quot;Vallvik&quot;' value='17.179285' />
          <semantic-value key='&quot;Victoria&quot;' value='-123.36634599999999' />
          <semantic-value key='&quot;Vila do Conde&quot;' value='-48.751131999999998' />
          <semantic-value key='&quot;Vila Real de San Antonio&quot;' value='-7.4178949999999997' />
          <semantic-value key='&quot;Villequier&quot;' value='0.67171899999999996' />
          <semantic-value key='&quot;Villeta&quot;' value='-57.567346999999998' />
          <semantic-value key='&quot;Vinaroz&quot;' value='0.47689399999999998' />
          <semantic-value key='&quot;Vunda Point&quot;' value='177.38646299999999' />
          <semantic-value key='&quot;Whale Cay&quot;' value='-77.793935000000005' />
          <semantic-value key='&quot;Whampoa&quot;' value='113.431258' />
          <semantic-value key='&quot;Wilsons Beach&quot;' value='-66.939263999999994' />
          <semantic-value key='&quot;Xcalac&quot;' value='-87.836348000000001' />
          <semantic-value key='&quot;Xingang&quot;' value='117.708454' />
          <semantic-value key='&quot;Yandina&quot;' value='159.22081900000001' />
          <semantic-value key='&quot;Yantian&quot;' value='114.26788999999999' />
          <semantic-value key='&quot;Yarimca&quot;' value='29.752081' />
          <semantic-value key='&quot;Yarmouth Harbor&quot;' value='-1.5027360000000001' />
          <semantic-value key='&quot;Yarraville&quot;' value='144.89215899999999' />
          <semantic-value key='&quot;Yentai&quot;' value='121.448757' />
          <semantic-value key='&quot;Yerakini&quot;' value='23.443649000000001' />
          <semantic-value key='&quot;Yura&quot;' value='135.11632599999999' />
          <semantic-value key='&quot;Zeebrugge&quot;' value='3.2083650000000001' />
          <semantic-value key='&quot;Zirku Island&quot;' value='53.072591000000003' />
          <semantic-value key='&quot;Zwyndrecht&quot;' value='4.3362879999999997' />
        </semantic-values>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Attalea&quot;' value='&quot;Antalya&quot;' />
          <semantic-value key='&quot;Banjer Masin&quot;' value='&quot;Banjarmasin&quot;' />
          <semantic-value key='&quot;Bathurst&quot;' value='&quot;Banjul&quot;' />
          <semantic-value key='&quot;Belize&quot;' value='&quot;Belize City&quot;' />
          <semantic-value key='&quot;Big Creek&quot;' value='&quot;Big Creek&quot;' />
          <semantic-value key='&quot;Cheju&quot;' value='&quot;Jeju&quot;' />
          <semantic-value key='&quot;Chibako&quot;' value='&quot;Chiba&quot;' />
          <semantic-value key='&quot;Colombo Harbor&quot;' value='&quot;Colombo&quot;' />
          <semantic-value key='&quot;Derindje&quot;' value='&quot;Derince&quot;' />
          <semantic-value key='&quot;El Djazair&quot;' value='&quot;Algiers&quot;' />
          <semantic-value key='&quot;Freeport&quot;' value='&quot;Freeport&quot;' />
          <semantic-value key='&quot;Hull&quot;' value='&quot;Hull&quot;' />
          <semantic-value key='&quot;Jiangyin&quot;' value='&quot;Changzhou Shi&quot;' />
          <semantic-value key='&quot;Jinsen&quot;' value='&quot;Incheon&quot;' />
          <semantic-value key='&quot;Kanokawa&quot;' value='&quot;Kanagawa-ku, Yokohama-shi&quot;' />
          <semantic-value key='&quot;Karachi Harbor&quot;' value='&quot;Karachi&quot;' />
          <semantic-value key='&quot;Khor al Ami&quot;' value='&quot;Kuwait City&quot;' />
          <semantic-value key='&quot;Kole Terminal&quot;' value='&quot;Douala&quot;' />
          <semantic-value key='&quot;Kristiansand S&quot;' value='&quot;Kristiansand&quot;' />
          <semantic-value key='&quot;Kunson&quot;' value='&quot;Gunsan&quot;' />
          <semantic-value key='&quot;La Coruna&quot;' value='&quot;Corunna&quot;' />
          <semantic-value key='&quot;Londonderry&quot;' value='&quot;Londonderry&quot;' />
          <semantic-value key='&quot;Military - Quingdau&quot;' value='&quot;Qingdao Shi&quot;' />
          <semantic-value key='&quot;Military - Yokohama&quot;' value='&quot;Kanagawa-ku, Yokohama-shi&quot;' />
          <semantic-value key='&quot;Mina Dumyat&quot;' value='&quot;Damietta&quot;' />
          <semantic-value key='&quot;Mina Zayed&quot;' value='&quot;Dubai&quot;' />
          <semantic-value key='&quot;Mizusima&quot;' value='&quot;Toyama-shi&quot;' />
          <semantic-value key='&quot;Nanticoke&quot;' value='&quot;Nanticoke&quot;' />
          <semantic-value key='&quot;Ningpo&quot;' value='&quot;Ningbo Shi&quot;' />
          <semantic-value key='&quot;North Atlantic (Maine to Cape Hatteras)&quot;' value='&quot;Hatteras&quot;' />
          <semantic-value key='&quot;Pakhoi&quot;' value='&quot;Beihai Shi&quot;' />
          <semantic-value key='&quot;Panama Canal - Caribbean&quot;' value='&quot;Panama City&quot;' />
          <semantic-value key='&quot;Pandjang&quot;' value='&quot;Bandar Lampung&quot;' />
          <semantic-value key='&quot;Philipsburgh&quot;' value='&quot;Philipsburg&quot;' />
          <semantic-value key='&quot;Pinang&quot;' value='&quot;Penang&quot;' />
          <semantic-value key='&quot;Port Arthur&quot;' value='&quot;Dalian Shi&quot;' />
          <semantic-value key='&quot;Port Bustamante&quot;' value='&quot;Port Royal&quot;' />
          <semantic-value key='&quot;Port Lyttelton&quot;' value='&quot;Lyttelton&quot;' />
          <semantic-value key='&quot;Port Natal&quot;' value='&quot;Durban&quot;' />
          <semantic-value key='&quot;Port Qasim&quot;' value='&quot;Karachi&quot;' />
          <semantic-value key='&quot;Puduchcheri&quot;' value='&quot;Puducherry&quot;' />
          <semantic-value key='&quot;Puerto Manzanillo&quot;' value='&quot;Manzanillo&quot;' />
          <semantic-value key='&quot;Qinhuangdao Gang&quot;' value='&quot;Qinhuangdao Shi&quot;' />
          <semantic-value key='&quot;Santa Barbara de Samana&quot;' value='&quot;Samana&quot;' />
          <semantic-value key='&quot;Sluiskill&quot;' value='&quot;Sluiskil&quot;' />
          <semantic-value key='&quot;Songkhla Harbor&quot;' value='&quot;Songkhla&quot;' />
          <semantic-value key='&quot;Soo&quot;' value='&quot;Sault Ste. Marie&quot;' />
          <semantic-value key='&quot;Sriracha&quot;' value='&quot;Si Racha&quot;' />
          <semantic-value key='&quot;St. Croix&quot;' value='&quot;Saint Croix&quot;' />
          <semantic-value key='&quot;Sultan Qaboos&quot;' value='&quot;Muscat&quot;' />
          <semantic-value key='&quot;Swatow&quot;' value='&quot;Shantou Shi&quot;' />
          <semantic-value key='&quot;Tallinn&quot;' value='&quot;Tallinn&quot;' />
          <semantic-value key='&quot;Tanjung Priok&quot;' value='&quot;Tipar&quot;' />
          <semantic-value key='&quot;Tarakan Island&quot;' value='&quot;Tarakan&quot;' />
          <semantic-value key='&quot;Thanh Pho Ho Chi Minh&quot;' value='&quot;Ho Chi Minh City&quot;' />
          <semantic-value key='&quot;Tourane&quot;' value='&quot;Da Nang&quot;' />
          <semantic-value key='&quot;Toyohasi&quot;' value='&quot;Toyohashi-shi&quot;' />
          <semantic-value key='&quot;Trincomali&quot;' value='&quot;Trincomalee&quot;' />
          <semantic-value key='&quot;Valencia Harvor&quot;' value='&quot;Knightstown&quot;' />
          <semantic-value key='&quot;Vegesack&quot;' value='&quot;Bremen&quot;' />
          <semantic-value key='&quot;Villagarcia de Arosa&quot;' value='&quot;Vilagarcía de Arousa&quot;' />
          <semantic-value key='&quot;Vito&quot;' value='&quot;Manila&quot;' />
          <semantic-value key='&quot;Welshpool&quot;' value='&quot;Welshpool&quot;' />
          <semantic-value key='&quot;Ymuiden&quot;' value='&quot;IJmuiden&quot;' />
          <semantic-value key='&quot;Yumuri&quot;' value='&quot;Havana&quot;' />
          <semantic-value key='&quot;Yuzhnyy&quot;' value='&quot;Yuzhne&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.471488' measure-ordering='alphabetic' measure-percentage='0.528512' show-structure='true' />
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
    <datasource caption='monthly-teu (savannah-unlading_2014-2018)' inline='true' name='federated.10sstqr12u8i5z10y81vi0toajb7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='savannah-unlading_2014-2018' name='excel-direct.1clr5uo08z8mhq0zquyds1pujcm5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/mainzer_work/Desktop/projects/savannah-harbor-narrative/data/unlading-data/savannah-unlading_2014-2018.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1clr5uo08z8mhq0zquyds1pujcm5' name='monthly-teu' table='[&apos;monthly-teu$&apos;]' type='table'>
          <columns gridOrigin='A1:N194:no:A1:N194:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='date' date-parse-format='MMMM' name='Month' ordinal='1' />
            <column datatype='integer' name='Imports Full' ordinal='2' />
            <column datatype='integer' name='Imports Empty' ordinal='3' />
            <column datatype='integer' name='Imports Total' ordinal='4' />
            <column datatype='real' name='Imports YoY' ordinal='5' />
            <column datatype='integer' name='Exports Full' ordinal='6' />
            <column datatype='integer' name='Exports Empty' ordinal='7' />
            <column datatype='integer' name='Exports Total' ordinal='8' />
            <column datatype='real' name='Exports YoY' ordinal='9' />
            <column datatype='integer' name='Total Full' ordinal='10' />
            <column datatype='integer' name='Total Empty' ordinal='11' />
            <column datatype='integer' name='Total' ordinal='12' />
            <column datatype='real' name='Total YoY' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N194:no:A1:N194:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imports Full</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Imports Full]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Imports Full</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imports Empty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Imports Empty]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Imports Empty</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imports Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Imports Total]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Imports Total</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imports YoY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Imports YoY]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Imports YoY</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exports Full</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Exports Full]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Exports Full</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exports Empty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Exports Empty]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Exports Empty</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exports Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Exports Total]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Exports Total</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exports YoY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Exports YoY]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Exports YoY</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Full</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Full]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Total Full</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Empty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Empty]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Total Empty</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total YoY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total YoY]</local-name>
            <parent-name>[monthly-teu]</parent-name>
            <remote-alias>Total YoY</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Month Number' datatype='integer' name='[Calculation_428967894022176769]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEPART(&apos;month&apos;,[Month])' />
      </column>
      <column caption='Month/year' datatype='date' name='[Calculation_428967894022410242]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(STR([Calculation_428967894022176769]) + &quot;/01/&quot; + STR([Year]))' />
      </column>
      <column caption='Exports % of' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Calculation_428967894028173316]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='( SUM([Exports Total]) / SUM([Total]) ) * 100' />
      </column>
      <column caption='Imports % of' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Exports % of (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='( SUM([Imports Total]) / SUM([Total]) ) * 100' />
      </column>
      <column datatype='integer' name='[Exports Total]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Imports Total]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Total]' derivation='Sum' name='[pcdf:sum:Total:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Exports Total]' derivation='Sum' name='[sum:Exports Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Imports Total]' derivation='Sum' name='[sum:Imports Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.330864' measure-ordering='alphabetic' measure-percentage='0.669136' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10sstqr12u8i5z10y81vi0toajb7].[pcdf:sum:Total:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10sstqr12u8i5z10y81vi0toajb7].[sum:Exports Total:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10sstqr12u8i5z10y81vi0toajb7].[sum:Total:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.10sstqr12u8i5z10y81vi0toajb7].[sum:Imports Total:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Calculation_428967894022410242' />
        <field-sort-custom-order field='Month' />
        <field-sort-custom-order field='Calculation_428967894022176769' />
        <field-sort-custom-order field='Imports Full' />
        <field-sort-custom-order field='Imports Empty' />
        <field-sort-custom-order field='Imports Total' />
        <field-sort-custom-order field='Imports YoY' />
        <field-sort-custom-order field='Exports Full' />
        <field-sort-custom-order field='Exports Empty' />
        <field-sort-custom-order field='Exports Total' />
        <field-sort-custom-order field='Exports YoY' />
        <field-sort-custom-order field='Total Full' />
        <field-sort-custom-order field='Total Empty' />
        <field-sort-custom-order field='Total' />
        <field-sort-custom-order field='Total YoY' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='foreign-ports-lading'>
      <table>
        <view>
          <datasources>
            <datasource caption='port-of-lading-summary (savannah-unlading_2014-2018)' name='federated.1phuvdy1lq0m8w1h3bhw90cfl96s' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1phuvdy1lq0m8w1h3bhw90cfl96s'>
            <column datatype='string' name='[Country of Lading]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;China (Mainland)&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Fiji Islands&quot;' value='&quot;Fiji&quot;' />
                <semantic-value key='&quot;Netherland Antilles&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;St. Vincent &amp; Northern Grenadines&quot;' value='&quot;Saint Vincent and the Grenadines&quot;' />
                <semantic-value key='&quot;Venezuala&quot;' value='&quot;Venezuela&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Port of Lading]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Aalesund&quot;' value='62.472119999999997' />
                <semantic-value key='&quot;Apapa&quot;' value='6.4554280000000004' />
                <semantic-value key='&quot;Aratu&quot;' value='-12.778541000000001' />
                <semantic-value key='&quot;Bahia de Amuay&quot;' value='11.776904' />
                <semantic-value key='&quot;Bangor&quot;' value='53.227094999999998' />
                <semantic-value key='&quot;Barcadera&quot;' value='12.48315' />
                <semantic-value key='&quot;Bassens&quot;' value='44.907451999999999' />
                <semantic-value key='&quot;Bei Jao&quot;' value='22.928619000000001' />
                <semantic-value key='&quot;Beilun&quot;' value='29.906571' />
                <semantic-value key='&quot;Bell Bay&quot;' value='-41.13308' />
                <semantic-value key='&quot;Boca Chica&quot;' value='18.452537' />
                <semantic-value key='&quot;Bukhta Severnaya&quot;' value='42.934216999999997' />
                <semantic-value key='&quot;Cagayan de Oro&quot;' value='8.4896419999999999' />
                <semantic-value key='&quot;Caucedo&quot;' value='18.425775000000002' />
                <semantic-value key='&quot;Chiwan&quot;' value='22.460884' />
                <semantic-value key='&quot;Constantza&quot;' value='44.162775000000003' />
                <semantic-value key='&quot;Contrecoeur&quot;' value='45.863187000000003' />
                <semantic-value key='&quot;Dos Bocas&quot;' value='19.082697' />
                <semantic-value key='&quot;El Dekheila&quot;' value='31.125387' />
                <semantic-value key='&quot;Escombreras&quot;' value='37.559161000000003' />
                <semantic-value key='&quot;Fremantle&quot;' value='-32.057139999999997' />
                <semantic-value key='&quot;Fuzhou&quot;' value='26.057061000000001' />
                <semantic-value key='&quot;Gevle&quot;' value='60.676642000000001' />
                <semantic-value key='&quot;Gozo Island&quot;' value='36.042090000000002' />
                <semantic-value key='&quot;Hakata&quot;' value='33.610410000000002' />
                <semantic-value key='&quot;Hirohata&quot;' value='34.787025999999997' />
                <semantic-value key='&quot;Hitaki Ko&quot;' value='34.787025999999997' />
                <semantic-value key='&quot;Irvine Harbor&quot;' value='55.608159999999998' />
                <semantic-value key='&quot;Itajay&quot;' value='-26.912541000000001' />
                <semantic-value key='&quot;Jebel Ali&quot;' value='24.987984999999998' />
                <semantic-value key='&quot;Jorf Lasfar&quot;' value='33.155647999999999' />
                <semantic-value key='&quot;Judda&quot;' value='21.494458000000002' />
                <semantic-value key='&quot;Kaohsiung&quot;' value='22.673974000000001' />
                <semantic-value key='&quot;Kemlik&quot;' value='39.976376000000002' />
                <semantic-value key='&quot;Khor Fakkan&quot;' value='25.353408000000002' />
                <semantic-value key='&quot;King Abdul Aziz Port&quot;' value='26.474426000000001' />
                <semantic-value key='&quot;Kingston&quot;' value='44.230178000000002' />
                <semantic-value key='&quot;L&apos;Avera&quot;' value='43.388568999999997' />
                <semantic-value key='&quot;La Pampilla&quot;' value='-11.920743' />
                <semantic-value key='&quot;Laem Chabang&quot;' value='13.101851999999999' />
                <semantic-value key='&quot;Laguna de Chiriqui&quot;' value='9.0482990000000001' />
                <semantic-value key='&quot;Lazaro Cardenas&quot;' value='17.954609999999999' />
                <semantic-value key='&quot;Luda&quot;' value='22.310763999999999' />
                <semantic-value key='&quot;Mahahual&quot;' value='18.715810000000001' />
                <semantic-value key='&quot;Mamonal&quot;' value='10.312326000000001' />
                <semantic-value key='&quot;Military - Port Kelang&quot;' value='2.996632' />
                <semantic-value key='&quot;Moin&quot;' value='9.9924759999999999' />
                <semantic-value key='&quot;Moji&quot;' value='33.911963' />
                <semantic-value key='&quot;Mosel&quot;' value='43.268963999999997' />
                <semantic-value key='&quot;Munguba&quot;' value='-0.91625999999999996' />
                <semantic-value key='&quot;Mylaki&quot;' value='38.38353' />
                <semantic-value key='&quot;Nagoya Ko&quot;' value='35.084313999999999' />
                <semantic-value key='&quot;Nemrut Bay&quot;' value='38.744047000000002' />
                <semantic-value key='&quot;New Mangalore&quot;' value='12.947471999999999' />
                <semantic-value key='&quot;Nhava Sheva&quot;' value='18.949912999999999' />
                <semantic-value key='&quot;Ocho Rios&quot;' value='18.407342' />
                <semantic-value key='&quot;Pajaritos&quot;' value='20.557535000000001' />
                <semantic-value key='&quot;Panderma&quot;' value='40.353513' />
                <semantic-value key='&quot;Pasir Gudang&quot;' value='1.4660839999999999' />
                <semantic-value key='&quot;Penarth&quot;' value='51.445248999999997' />
                <semantic-value key='&quot;Piraievs&quot;' value='37.943368999999997' />
                <semantic-value key='&quot;Pohang Hang&quot;' value='36.029528999999997' />
                <semantic-value key='&quot;Point Lisas&quot;' value='10.407755999999999' />
                <semantic-value key='&quot;Point Tupper&quot;' value='45.606653000000001' />
                <semantic-value key='&quot;Pointe a Pierre&quot;' value='10.31551' />
                <semantic-value key='&quot;Port do Pecem&quot;' value='-3.5521180000000001' />
                <semantic-value key='&quot;Port Esquivel&quot;' value='17.893920999999999' />
                <semantic-value key='&quot;Port Kembla&quot;' value='-34.486659000000003' />
                <semantic-value key='&quot;Port Rashid&quot;' value='25.284811999999999' />
                <semantic-value key='&quot;Port Swettenham&quot;' value='2.9986890000000002' />
                <semantic-value key='&quot;Porto de Leixoes&quot;' value='41.183098000000001' />
                <semantic-value key='&quot;Portocel&quot;' value='-19.840129999999998' />
                <semantic-value key='&quot;Progreso&quot;' value='21.279890999999999' />
                <semantic-value key='&quot;Puerto Bolivar&quot;' value='12.219196' />
                <semantic-value key='&quot;Puerto de Lirquen&quot;' value='-36.715183000000003' />
                <semantic-value key='&quot;Puerto Henecan&quot;' value='13.404448' />
                <semantic-value key='&quot;Puerto Miranda&quot;' value='7.9043239999999999' />
                <semantic-value key='&quot;Puerto Nuevo&quot;' value='-2.283944' />
                <semantic-value key='&quot;Puerto Quetzal&quot;' value='13.929124' />
                <semantic-value key='&quot;Puerto Vargas&quot;' value='9.7312200000000004' />
                <semantic-value key='&quot;Pulum Bukum&quot;' value='1.234464' />
                <semantic-value key='&quot;Punta Morales&quot;' value='10.067382' />
                <semantic-value key='&quot;Pyungtaek&quot;' value='36.992193999999998' />
                <semantic-value key='&quot;Ras Al Khafji&quot;' value='28.428712999999998' />
                <semantic-value key='&quot;Ringaskiddy&quot;' value='51.830506999999997' />
                <semantic-value key='&quot;Rio Jaina&quot;' value='18.600787' />
                <semantic-value key='&quot;Ruwais&quot;' value='24.109658' />
                <semantic-value key='&quot;Samarai&quot;' value='-10.612055' />
                <semantic-value key='&quot;San Juan de Nieva&quot;' value='43.587783000000002' />
                <semantic-value key='&quot;San Lorenzo&quot;' value='-32.747911000000002' />
                <semantic-value key='&quot;Sangi&quot;' value='10.385949' />
                <semantic-value key='&quot;Santa Clara&quot;' value='-2.4248539999999998' />
                <semantic-value key='&quot;Santa Panagia&quot;' value='37.101041000000002' />
                <semantic-value key='&quot;Santo Tomas de Castilla&quot;' value='15.690427' />
                <semantic-value key='&quot;Sao Luiz de Maranhao&quot;' value='-2.5393650000000001' />
                <semantic-value key='&quot;Sarnia&quot;' value='42.974594000000003' />
                <semantic-value key='&quot;Saupe&quot;' value='-12.738681' />
                <semantic-value key='&quot;Savanna La Mar&quot;' value='18.229755000000001' />
                <semantic-value key='&quot;Selangor&quot;' value='3.3391470000000001' />
                <semantic-value key='&quot;Sepetiba Bay&quot;' value='-22.986329000000001' />
                <semantic-value key='&quot;Serangoon Harbor&quot;' value='1.3974340000000001' />
                <semantic-value key='&quot;Seven Islands&quot;' value='44.455103000000001' />
                <semantic-value key='&quot;Shekou&quot;' value='22.481929000000001' />
                <semantic-value key='&quot;Shellhaven&quot;' value='51.512303000000003' />
                <semantic-value key='&quot;Shilong&quot;' value='23.105274999999999' />
                <semantic-value key='&quot;Simizu&quot;' value='35.098028999999997' />
                <semantic-value key='&quot;Sinoe&quot;' value='5.0250640000000004' />
                <semantic-value key='&quot;South Riding Point&quot;' value='26.625854' />
                <semantic-value key='&quot;South Shetlands&quot;' value='-62.207858999999999' />
                <semantic-value key='&quot;Southhampton&quot;' value='50.909450999999997' />
                <semantic-value key='&quot;St. Ann&apos;s Bay&quot;' value='18.429884999999999' />
                <semantic-value key='&quot;St. Eustatius&quot;' value='52.054468' />
                <semantic-value key='&quot;St. Martin&quot;' value='18.081091000000001' />
                <semantic-value key='&quot;Stadersand&quot;' value='53.620538000000003' />
                <semantic-value key='&quot;Subic Bay&quot;' value='14.791409' />
                <semantic-value key='&quot;Sungei Pakning&quot;' value='1.3399970000000001' />
                <semantic-value key='&quot;Surabaya&quot;' value='-7.2595929999999997' />
                <semantic-value key='&quot;Susaka&quot;' value='44.508685' />
                <semantic-value key='&quot;Taichung&quot;' value='24.139690999999999' />
                <semantic-value key='&quot;Tanjung Pelepas&quot;' value='1.362382' />
                <semantic-value key='&quot;Tanjunguban&quot;' value='1.0615289999999999' />
                <semantic-value key='&quot;Teesport&quot;' value='54.610365999999999' />
                <semantic-value key='&quot;Teluk Bayur&quot;' value='-0.99244399999999999' />
                <semantic-value key='&quot;Tema&quot;' value='5.7346950000000003' />
                <semantic-value key='&quot;Tilbury&quot;' value='51.462698000000003' />
                <semantic-value key='&quot;Tin Can Island&quot;' value='6.4314200000000001' />
                <semantic-value key='&quot;Tobago&quot;' value='11.232821' />
                <semantic-value key='&quot;Trombetas&quot;' value='-7.399667' />
                <semantic-value key='&quot;Turiamo&quot;' value='10.442997999999999' />
                <semantic-value key='&quot;Tutunciftlik&quot;' value='40.761786999999998' />
                <semantic-value key='&quot;Uzunkum&quot;' value='37.817354999999999' />
                <semantic-value key='&quot;Vacamonte&quot;' value='8.910425' />
                <semantic-value key='&quot;Vaksdal&quot;' value='60.578510000000001' />
                <semantic-value key='&quot;Vallvik&quot;' value='61.184803000000002' />
                <semantic-value key='&quot;Victoria&quot;' value='48.428511999999998' />
                <semantic-value key='&quot;Vila do Conde&quot;' value='-1.5419860000000001' />
                <semantic-value key='&quot;Vila Real de San Antonio&quot;' value='37.194201999999997' />
                <semantic-value key='&quot;Villequier&quot;' value='49.512703000000002' />
                <semantic-value key='&quot;Villeta&quot;' value='-25.507593' />
                <semantic-value key='&quot;Vinaroz&quot;' value='40.468581' />
                <semantic-value key='&quot;Vunda Point&quot;' value='-17.680088000000001' />
                <semantic-value key='&quot;Whale Cay&quot;' value='25.403051999999999' />
                <semantic-value key='&quot;Whampoa&quot;' value='23.084468999999999' />
                <semantic-value key='&quot;Wilsons Beach&quot;' value='44.932456999999999' />
                <semantic-value key='&quot;Xcalac&quot;' value='18.271056000000002' />
                <semantic-value key='&quot;Xingang&quot;' value='39.002934000000003' />
                <semantic-value key='&quot;Yandina&quot;' value='-9.0795949999999994' />
                <semantic-value key='&quot;Yantian&quot;' value='22.589849000000001' />
                <semantic-value key='&quot;Yarimca&quot;' value='40.764625000000002' />
                <semantic-value key='&quot;Yarmouth Harbor&quot;' value='50.705174' />
                <semantic-value key='&quot;Yarraville&quot;' value='-37.817494000000003' />
                <semantic-value key='&quot;Yentai&quot;' value='37.472777999999998' />
                <semantic-value key='&quot;Yerakini&quot;' value='40.278911000000001' />
                <semantic-value key='&quot;Yura&quot;' value='33.972456999999999' />
                <semantic-value key='&quot;Zeebrugge&quot;' value='51.319737000000003' />
                <semantic-value key='&quot;Zirku Island&quot;' value='24.879750000000001' />
                <semantic-value key='&quot;Zwyndrecht&quot;' value='51.215713999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Aalesund&quot;' value='6.1499079999999999' />
                <semantic-value key='&quot;Apapa&quot;' value='3.3646500000000001' />
                <semantic-value key='&quot;Aratu&quot;' value='-38.497734999999999' />
                <semantic-value key='&quot;Bahia de Amuay&quot;' value='-70.242108000000002' />
                <semantic-value key='&quot;Bangor&quot;' value='-4.1282629999999996' />
                <semantic-value key='&quot;Barcadera&quot;' value='-69.990280999999996' />
                <semantic-value key='&quot;Bassens&quot;' value='-0.52819300000000002' />
                <semantic-value key='&quot;Bei Jao&quot;' value='113.208045' />
                <semantic-value key='&quot;Beilun&quot;' value='121.838385' />
                <semantic-value key='&quot;Bell Bay&quot;' value='146.85897800000001' />
                <semantic-value key='&quot;Boca Chica&quot;' value='-69.607164999999995' />
                <semantic-value key='&quot;Bukhta Severnaya&quot;' value='131.401184' />
                <semantic-value key='&quot;Cagayan de Oro&quot;' value='124.620439' />
                <semantic-value key='&quot;Caucedo&quot;' value='-69.630825999999999' />
                <semantic-value key='&quot;Chiwan&quot;' value='113.88923' />
                <semantic-value key='&quot;Constantza&quot;' value='28.636849000000002' />
                <semantic-value key='&quot;Contrecoeur&quot;' value='-73.251276000000004' />
                <semantic-value key='&quot;Dos Bocas&quot;' value='-96.146985000000001' />
                <semantic-value key='&quot;El Dekheila&quot;' value='29.812021999999999' />
                <semantic-value key='&quot;Escombreras&quot;' value='-0.96923999999999999' />
                <semantic-value key='&quot;Fremantle&quot;' value='115.743172' />
                <semantic-value key='&quot;Fuzhou&quot;' value='119.296423' />
                <semantic-value key='&quot;Gevle&quot;' value='17.142924000000001' />
                <semantic-value key='&quot;Gozo Island&quot;' value='14.252424' />
                <semantic-value key='&quot;Hakata&quot;' value='130.40307999999999' />
                <semantic-value key='&quot;Hirohata&quot;' value='135.40090000000001' />
                <semantic-value key='&quot;Hitaki Ko&quot;' value='135.40090000000001' />
                <semantic-value key='&quot;Irvine Harbor&quot;' value='-4.6887319999999999' />
                <semantic-value key='&quot;Itajay&quot;' value='-48.667282999999998' />
                <semantic-value key='&quot;Jebel Ali&quot;' value='55.022581000000002' />
                <semantic-value key='&quot;Jorf Lasfar&quot;' value='-8.6227920000000005' />
                <semantic-value key='&quot;Judda&quot;' value='39.171382999999999' />
                <semantic-value key='&quot;Kaohsiung&quot;' value='120.280269' />
                <semantic-value key='&quot;Kemlik&quot;' value='32.583550000000002' />
                <semantic-value key='&quot;Khor Fakkan&quot;' value='56.358727999999999' />
                <semantic-value key='&quot;King Abdul Aziz Port&quot;' value='50.192681' />
                <semantic-value key='&quot;Kingston&quot;' value='-76.488794999999996' />
                <semantic-value key='&quot;L&apos;Avera&quot;' value='5.0305689999999998' />
                <semantic-value key='&quot;La Pampilla&quot;' value='-77.140218000000004' />
                <semantic-value key='&quot;Laem Chabang&quot;' value='100.913264' />
                <semantic-value key='&quot;Laguna de Chiriqui&quot;' value='-82.081196000000006' />
                <semantic-value key='&quot;Lazaro Cardenas&quot;' value='-102.191582' />
                <semantic-value key='&quot;Luda&quot;' value='114.191295' />
                <semantic-value key='&quot;Mahahual&quot;' value='-87.707537000000002' />
                <semantic-value key='&quot;Mamonal&quot;' value='-75.501333000000002' />
                <semantic-value key='&quot;Military - Port Kelang&quot;' value='101.394172' />
                <semantic-value key='&quot;Moin&quot;' value='-83.094492000000002' />
                <semantic-value key='&quot;Moji&quot;' value='130.97021000000001' />
                <semantic-value key='&quot;Mosel&quot;' value='-2.9347590000000001' />
                <semantic-value key='&quot;Munguba&quot;' value='-52.44744' />
                <semantic-value key='&quot;Mylaki&quot;' value='24.061402000000001' />
                <semantic-value key='&quot;Nagoya Ko&quot;' value='136.883848' />
                <semantic-value key='&quot;Nemrut Bay&quot;' value='26.833552999999998' />
                <semantic-value key='&quot;New Mangalore&quot;' value='74.817625000000007' />
                <semantic-value key='&quot;Nhava Sheva&quot;' value='72.951025000000001' />
                <semantic-value key='&quot;Ocho Rios&quot;' value='-77.105808999999994' />
                <semantic-value key='&quot;Pajaritos&quot;' value='-97.474902' />
                <semantic-value key='&quot;Panderma&quot;' value='27.968993999999999' />
                <semantic-value key='&quot;Pasir Gudang&quot;' value='103.87198600000001' />
                <semantic-value key='&quot;Penarth&quot;' value='-3.1672250000000002' />
                <semantic-value key='&quot;Piraievs&quot;' value='23.643711' />
                <semantic-value key='&quot;Pohang Hang&quot;' value='129.37716399999999' />
                <semantic-value key='&quot;Point Lisas&quot;' value='-61.492524000000003' />
                <semantic-value key='&quot;Point Tupper&quot;' value='-61.352902' />
                <semantic-value key='&quot;Pointe a Pierre&quot;' value='-61.458786000000003' />
                <semantic-value key='&quot;Port do Pecem&quot;' value='-38.831755999999999' />
                <semantic-value key='&quot;Port Esquivel&quot;' value='-77.132018000000002' />
                <semantic-value key='&quot;Port Kembla&quot;' value='150.90251900000001' />
                <semantic-value key='&quot;Port Rashid&quot;' value='55.278204000000002' />
                <semantic-value key='&quot;Port Swettenham&quot;' value='101.391769' />
                <semantic-value key='&quot;Porto de Leixoes&quot;' value='-8.7028839999999992' />
                <semantic-value key='&quot;Portocel&quot;' value='-40.057651' />
                <semantic-value key='&quot;Progreso&quot;' value='-89.664766' />
                <semantic-value key='&quot;Puerto Bolivar&quot;' value='-71.999690000000001' />
                <semantic-value key='&quot;Puerto de Lirquen&quot;' value='-72.981358' />
                <semantic-value key='&quot;Puerto Henecan&quot;' value='-87.429236000000003' />
                <semantic-value key='&quot;Puerto Miranda&quot;' value='-67.478913000000006' />
                <semantic-value key='&quot;Puerto Nuevo&quot;' value='-78.897141000000005' />
                <semantic-value key='&quot;Puerto Quetzal&quot;' value='-90.761673999999999' />
                <semantic-value key='&quot;Puerto Vargas&quot;' value='-82.814772000000005' />
                <semantic-value key='&quot;Pulum Bukum&quot;' value='103.762342' />
                <semantic-value key='&quot;Punta Morales&quot;' value='-84.948671000000004' />
                <semantic-value key='&quot;Pyungtaek&quot;' value='127.085368' />
                <semantic-value key='&quot;Ras Al Khafji&quot;' value='48.49053' />
                <semantic-value key='&quot;Ringaskiddy&quot;' value='-8.3211759999999995' />
                <semantic-value key='&quot;Rio Jaina&quot;' value='-70.147318999999996' />
                <semantic-value key='&quot;Ruwais&quot;' value='52.721159999999998' />
                <semantic-value key='&quot;Samarai&quot;' value='150.66402099999999' />
                <semantic-value key='&quot;San Juan de Nieva&quot;' value='-5.9356070000000001' />
                <semantic-value key='&quot;San Lorenzo&quot;' value='-60.734498000000002' />
                <semantic-value key='&quot;Sangi&quot;' value='123.65241' />
                <semantic-value key='&quot;Santa Clara&quot;' value='-54.714204000000002' />
                <semantic-value key='&quot;Santa Panagia&quot;' value='15.269824' />
                <semantic-value key='&quot;Santo Tomas de Castilla&quot;' value='-88.620148999999998' />
                <semantic-value key='&quot;Sao Luiz de Maranhao&quot;' value='-44.286963' />
                <semantic-value key='&quot;Sarnia&quot;' value='-82.411687999999998' />
                <semantic-value key='&quot;Saupe&quot;' value='-38.612997' />
                <semantic-value key='&quot;Savanna La Mar&quot;' value='-78.139852000000005' />
                <semantic-value key='&quot;Selangor&quot;' value='101.560378' />
                <semantic-value key='&quot;Sepetiba Bay&quot;' value='-43.693316000000003' />
                <semantic-value key='&quot;Serangoon Harbor&quot;' value='103.94113400000001' />
                <semantic-value key='&quot;Seven Islands&quot;' value='-63.674892' />
                <semantic-value key='&quot;Shekou&quot;' value='113.919675' />
                <semantic-value key='&quot;Shellhaven&quot;' value='0.50248700000000002' />
                <semantic-value key='&quot;Shilong&quot;' value='113.874206' />
                <semantic-value key='&quot;Simizu&quot;' value='138.89828600000001' />
                <semantic-value key='&quot;Sinoe&quot;' value='-9.0406259999999996' />
                <semantic-value key='&quot;South Riding Point&quot;' value='-78.230118000000004' />
                <semantic-value key='&quot;South Shetlands&quot;' value='-58.691121000000003' />
                <semantic-value key='&quot;Southhampton&quot;' value='-1.403246' />
                <semantic-value key='&quot;St. Ann&apos;s Bay&quot;' value='-77.199562999999998' />
                <semantic-value key='&quot;St. Eustatius&quot;' value='4.5436209999999999' />
                <semantic-value key='&quot;St. Martin&quot;' value='-63.050814000000003' />
                <semantic-value key='&quot;Stadersand&quot;' value='9.5289560000000009' />
                <semantic-value key='&quot;Subic Bay&quot;' value='120.24220699999999' />
                <semantic-value key='&quot;Sungei Pakning&quot;' value='102.13534199999999' />
                <semantic-value key='&quot;Surabaya&quot;' value='112.754603' />
                <semantic-value key='&quot;Susaka&quot;' value='14.306426' />
                <semantic-value key='&quot;Taichung&quot;' value='120.661964' />
                <semantic-value key='&quot;Tanjung Pelepas&quot;' value='103.553287' />
                <semantic-value key='&quot;Tanjunguban&quot;' value='104.220911' />
                <semantic-value key='&quot;Teesport&quot;' value='-1.1508910000000001' />
                <semantic-value key='&quot;Teluk Bayur&quot;' value='100.383875' />
                <semantic-value key='&quot;Tema&quot;' value='0.031449999999999999' />
                <semantic-value key='&quot;Tilbury&quot;' value='0.36106100000000002' />
                <semantic-value key='&quot;Tin Can Island&quot;' value='3.3436370000000002' />
                <semantic-value key='&quot;Tobago&quot;' value='-60.696677999999999' />
                <semantic-value key='&quot;Trombetas&quot;' value='-72.416460000000001' />
                <semantic-value key='&quot;Turiamo&quot;' value='-67.846881999999994' />
                <semantic-value key='&quot;Tutunciftlik&quot;' value='29.747608' />
                <semantic-value key='&quot;Uzunkum&quot;' value='27.540198' />
                <semantic-value key='&quot;Vacamonte&quot;' value='-79.701948000000002' />
                <semantic-value key='&quot;Vaksdal&quot;' value='5.7711579999999998' />
                <semantic-value key='&quot;Vallvik&quot;' value='17.179285' />
                <semantic-value key='&quot;Victoria&quot;' value='-123.36634599999999' />
                <semantic-value key='&quot;Vila do Conde&quot;' value='-48.751131999999998' />
                <semantic-value key='&quot;Vila Real de San Antonio&quot;' value='-7.4178949999999997' />
                <semantic-value key='&quot;Villequier&quot;' value='0.67171899999999996' />
                <semantic-value key='&quot;Villeta&quot;' value='-57.567346999999998' />
                <semantic-value key='&quot;Vinaroz&quot;' value='0.47689399999999998' />
                <semantic-value key='&quot;Vunda Point&quot;' value='177.38646299999999' />
                <semantic-value key='&quot;Whale Cay&quot;' value='-77.793935000000005' />
                <semantic-value key='&quot;Whampoa&quot;' value='113.431258' />
                <semantic-value key='&quot;Wilsons Beach&quot;' value='-66.939263999999994' />
                <semantic-value key='&quot;Xcalac&quot;' value='-87.836348000000001' />
                <semantic-value key='&quot;Xingang&quot;' value='117.708454' />
                <semantic-value key='&quot;Yandina&quot;' value='159.22081900000001' />
                <semantic-value key='&quot;Yantian&quot;' value='114.26788999999999' />
                <semantic-value key='&quot;Yarimca&quot;' value='29.752081' />
                <semantic-value key='&quot;Yarmouth Harbor&quot;' value='-1.5027360000000001' />
                <semantic-value key='&quot;Yarraville&quot;' value='144.89215899999999' />
                <semantic-value key='&quot;Yentai&quot;' value='121.448757' />
                <semantic-value key='&quot;Yerakini&quot;' value='23.443649000000001' />
                <semantic-value key='&quot;Yura&quot;' value='135.11632599999999' />
                <semantic-value key='&quot;Zeebrugge&quot;' value='3.2083650000000001' />
                <semantic-value key='&quot;Zirku Island&quot;' value='53.072591000000003' />
                <semantic-value key='&quot;Zwyndrecht&quot;' value='4.3362879999999997' />
              </semantic-values>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Attalea&quot;' value='&quot;Antalya&quot;' />
                <semantic-value key='&quot;Banjer Masin&quot;' value='&quot;Banjarmasin&quot;' />
                <semantic-value key='&quot;Bathurst&quot;' value='&quot;Banjul&quot;' />
                <semantic-value key='&quot;Belize&quot;' value='&quot;Belize City&quot;' />
                <semantic-value key='&quot;Big Creek&quot;' value='&quot;Big Creek&quot;' />
                <semantic-value key='&quot;Cheju&quot;' value='&quot;Jeju&quot;' />
                <semantic-value key='&quot;Chibako&quot;' value='&quot;Chiba&quot;' />
                <semantic-value key='&quot;Colombo Harbor&quot;' value='&quot;Colombo&quot;' />
                <semantic-value key='&quot;Derindje&quot;' value='&quot;Derince&quot;' />
                <semantic-value key='&quot;El Djazair&quot;' value='&quot;Algiers&quot;' />
                <semantic-value key='&quot;Freeport&quot;' value='&quot;Freeport&quot;' />
                <semantic-value key='&quot;Hull&quot;' value='&quot;Hull&quot;' />
                <semantic-value key='&quot;Jiangyin&quot;' value='&quot;Changzhou Shi&quot;' />
                <semantic-value key='&quot;Jinsen&quot;' value='&quot;Incheon&quot;' />
                <semantic-value key='&quot;Kanokawa&quot;' value='&quot;Kanagawa-ku, Yokohama-shi&quot;' />
                <semantic-value key='&quot;Karachi Harbor&quot;' value='&quot;Karachi&quot;' />
                <semantic-value key='&quot;Khor al Ami&quot;' value='&quot;Kuwait City&quot;' />
                <semantic-value key='&quot;Kole Terminal&quot;' value='&quot;Douala&quot;' />
                <semantic-value key='&quot;Kristiansand S&quot;' value='&quot;Kristiansand&quot;' />
                <semantic-value key='&quot;Kunson&quot;' value='&quot;Gunsan&quot;' />
                <semantic-value key='&quot;La Coruna&quot;' value='&quot;Corunna&quot;' />
                <semantic-value key='&quot;Londonderry&quot;' value='&quot;Londonderry&quot;' />
                <semantic-value key='&quot;Military - Quingdau&quot;' value='&quot;Qingdao Shi&quot;' />
                <semantic-value key='&quot;Military - Yokohama&quot;' value='&quot;Kanagawa-ku, Yokohama-shi&quot;' />
                <semantic-value key='&quot;Mina Dumyat&quot;' value='&quot;Damietta&quot;' />
                <semantic-value key='&quot;Mina Zayed&quot;' value='&quot;Dubai&quot;' />
                <semantic-value key='&quot;Mizusima&quot;' value='&quot;Toyama-shi&quot;' />
                <semantic-value key='&quot;Nanticoke&quot;' value='&quot;Nanticoke&quot;' />
                <semantic-value key='&quot;Ningpo&quot;' value='&quot;Ningbo Shi&quot;' />
                <semantic-value key='&quot;North Atlantic (Maine to Cape Hatteras)&quot;' value='&quot;Hatteras&quot;' />
                <semantic-value key='&quot;Pakhoi&quot;' value='&quot;Beihai Shi&quot;' />
                <semantic-value key='&quot;Panama Canal - Caribbean&quot;' value='&quot;Panama City&quot;' />
                <semantic-value key='&quot;Pandjang&quot;' value='&quot;Bandar Lampung&quot;' />
                <semantic-value key='&quot;Philipsburgh&quot;' value='&quot;Philipsburg&quot;' />
                <semantic-value key='&quot;Pinang&quot;' value='&quot;Penang&quot;' />
                <semantic-value key='&quot;Port Arthur&quot;' value='&quot;Dalian Shi&quot;' />
                <semantic-value key='&quot;Port Bustamante&quot;' value='&quot;Port Royal&quot;' />
                <semantic-value key='&quot;Port Lyttelton&quot;' value='&quot;Lyttelton&quot;' />
                <semantic-value key='&quot;Port Natal&quot;' value='&quot;Durban&quot;' />
                <semantic-value key='&quot;Port Qasim&quot;' value='&quot;Karachi&quot;' />
                <semantic-value key='&quot;Puduchcheri&quot;' value='&quot;Puducherry&quot;' />
                <semantic-value key='&quot;Puerto Manzanillo&quot;' value='&quot;Manzanillo&quot;' />
                <semantic-value key='&quot;Qinhuangdao Gang&quot;' value='&quot;Qinhuangdao Shi&quot;' />
                <semantic-value key='&quot;Santa Barbara de Samana&quot;' value='&quot;Samana&quot;' />
                <semantic-value key='&quot;Sluiskill&quot;' value='&quot;Sluiskil&quot;' />
                <semantic-value key='&quot;Songkhla Harbor&quot;' value='&quot;Songkhla&quot;' />
                <semantic-value key='&quot;Soo&quot;' value='&quot;Sault Ste. Marie&quot;' />
                <semantic-value key='&quot;Sriracha&quot;' value='&quot;Si Racha&quot;' />
                <semantic-value key='&quot;St. Croix&quot;' value='&quot;Saint Croix&quot;' />
                <semantic-value key='&quot;Sultan Qaboos&quot;' value='&quot;Muscat&quot;' />
                <semantic-value key='&quot;Swatow&quot;' value='&quot;Shantou Shi&quot;' />
                <semantic-value key='&quot;Tallinn&quot;' value='&quot;Tallinn&quot;' />
                <semantic-value key='&quot;Tanjung Priok&quot;' value='&quot;Tipar&quot;' />
                <semantic-value key='&quot;Tarakan Island&quot;' value='&quot;Tarakan&quot;' />
                <semantic-value key='&quot;Thanh Pho Ho Chi Minh&quot;' value='&quot;Ho Chi Minh City&quot;' />
                <semantic-value key='&quot;Tourane&quot;' value='&quot;Da Nang&quot;' />
                <semantic-value key='&quot;Toyohasi&quot;' value='&quot;Toyohashi-shi&quot;' />
                <semantic-value key='&quot;Trincomali&quot;' value='&quot;Trincomalee&quot;' />
                <semantic-value key='&quot;Valencia Harvor&quot;' value='&quot;Knightstown&quot;' />
                <semantic-value key='&quot;Vegesack&quot;' value='&quot;Bremen&quot;' />
                <semantic-value key='&quot;Villagarcia de Arosa&quot;' value='&quot;Vilagarcía de Arousa&quot;' />
                <semantic-value key='&quot;Vito&quot;' value='&quot;Manila&quot;' />
                <semantic-value key='&quot;Welshpool&quot;' value='&quot;Welshpool&quot;' />
                <semantic-value key='&quot;Ymuiden&quot;' value='&quot;IJmuiden&quot;' />
                <semantic-value key='&quot;Yumuri&quot;' value='&quot;Havana&quot;' />
                <semantic-value key='&quot;Yuzhnyy&quot;' value='&quot;Yuzhne&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Country of Lading]' derivation='None' name='[none:Country of Lading:nk]' pivot='key' type='nominal' />
            <column-instance column='[Port of Lading]' derivation='None' name='[none:Port of Lading:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[none:Port of Lading:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Aabenraa&quot;' function='range' level='[none:Port of Lading:nk]' to='&quot;Nombre de Dios&quot;' />
              <groupfilter from='&quot;Noumea&quot;' function='range' level='[none:Port of Lading:nk]' to='&quot;Zwyndrecht&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[none:Port of Lading:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[Longitude (generated)]' field-type='quantitative' max='23532428.147540297' min='-18673649.508196719' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[Latitude (generated)]' field-type='quantitative' max='12650324.324331859' min='-8937046.5422090385' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[none:Port of Lading:nk]' />
              <lod column='[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[none:Country of Lading:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[Latitude (generated)]</rows>
        <cols>[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{55FF99F1-D574-49AF-BF84-936AAB4A75F3}' />
    </worksheet>
    <worksheet name='imports-exports-month/year'>
      <table>
        <view>
          <datasources>
            <datasource caption='monthly-teu (savannah-unlading_2014-2018)' name='federated.10sstqr12u8i5z10y81vi0toajb7' />
          </datasources>
          <datasource-dependencies datasource='federated.10sstqr12u8i5z10y81vi0toajb7'>
            <column caption='Month Number' datatype='integer' name='[Calculation_428967894022176769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEPART(&apos;month&apos;,[Month])' />
            </column>
            <column caption='Month/year' datatype='date' name='[Calculation_428967894022410242]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(STR([Calculation_428967894022176769]) + &quot;/01/&quot; + STR([Year]))' />
            </column>
            <column datatype='date' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Total]' derivation='Sum' forecast-column-base='[sum:Total:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_428967894022410242]' derivation='Month-Trunc' name='[tmn:Calculation_428967894022410242:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.10sstqr12u8i5z10y81vi0toajb7].[tmn:Calculation_428967894022410242:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.10sstqr12u8i5z10y81vi0toajb7].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10sstqr12u8i5z10y81vi0toajb7].[tmn:Calculation_428967894022410242:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.10sstqr12u8i5z10y81vi0toajb7].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='98' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10sstqr12u8i5z10y81vi0toajb7].[tmn:Calculation_428967894022410242:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.10sstqr12u8i5z10y81vi0toajb7].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10sstqr12u8i5z10y81vi0toajb7].[fVal:sum:Total:qk]</rows>
        <cols>([federated.10sstqr12u8i5z10y81vi0toajb7].[tmn:Calculation_428967894022410242:qk] + [federated.10sstqr12u8i5z10y81vi0toajb7].[tmn:Calculation_428967894022410242:qk])</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A66F781C-1F0E-4464-A7AC-806F3E74CC2F}' />
    </worksheet>
    <worksheet name='imports-exports-share'>
      <table>
        <view>
          <datasources>
            <datasource caption='monthly-teu (savannah-unlading_2014-2018)' name='federated.10sstqr12u8i5z10y81vi0toajb7' />
          </datasources>
          <datasource-dependencies datasource='federated.10sstqr12u8i5z10y81vi0toajb7'>
            <column datatype='integer' name='[Exports Total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Imports Total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Exports Total]' derivation='Sum' name='[sum:Exports Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Imports Total]' derivation='Sum' name='[sum:Imports Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10sstqr12u8i5z10y81vi0toajb7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10sstqr12u8i5z10y81vi0toajb7].[sum:Exports Total:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10sstqr12u8i5z10y81vi0toajb7].[sum:Imports Total:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10sstqr12u8i5z10y81vi0toajb7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.10sstqr12u8i5z10y81vi0toajb7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10sstqr12u8i5z10y81vi0toajb7].[Multiple Values]</rows>
        <cols>[federated.10sstqr12u8i5z10y81vi0toajb7].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{042682EE-432F-49FE-AC08-62090BC535D2}' />
    </worksheet>
    <worksheet name='imports-exports_03-08'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Combined imports and exports of TEUs (twenty-foot-equivalent-unit, i.e., standard container)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='monthly-teu (savannah-unlading_2014-2018)' name='federated.10sstqr12u8i5z10y81vi0toajb7' />
          </datasources>
          <datasource-dependencies datasource='federated.10sstqr12u8i5z10y81vi0toajb7'>
            <column caption='Month Number' datatype='integer' name='[Calculation_428967894022176769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEPART(&apos;month&apos;,[Month])' />
            </column>
            <column caption='Month/year' datatype='date' name='[Calculation_428967894022410242]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(STR([Calculation_428967894022176769]) + &quot;/01/&quot; + STR([Year]))' />
            </column>
            <column datatype='date' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Total]' derivation='Sum' name='[pcdf:sum:Total:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_428967894022410242]' derivation='Year' name='[yr:Calculation_428967894022410242:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.10sstqr12u8i5z10y81vi0toajb7].[pcdf:sum:Total:qk]' />
              <text column='[federated.10sstqr12u8i5z10y81vi0toajb7].[sum:Total:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10sstqr12u8i5z10y81vi0toajb7].[sum:Total:qk]</rows>
        <cols>[federated.10sstqr12u8i5z10y81vi0toajb7].[yr:Calculation_428967894022410242:ok]</cols>
      </table>
      <simple-id uuid='{4966308E-7BCB-495C-947A-4399B0F23B30}' />
    </worksheet>
  </worksheets>
  <windows show-side-pane='false' source-height='51'>
    <window class='worksheet' name='imports-exports_03-08'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10sstqr12u8i5z10y81vi0toajb7].[yr:Calculation_428967894022410242:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7F0BDC4-AA39-4399-9834-9C91734CA334}' />
    </window>
    <window class='worksheet' name='imports-exports-share'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10sstqr12u8i5z10y81vi0toajb7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10sstqr12u8i5z10y81vi0toajb7].[:Measure Names]</field>
            <field>[federated.10sstqr12u8i5z10y81vi0toajb7].[none:Year:qk]</field>
            <field>[federated.10sstqr12u8i5z10y81vi0toajb7].[yr:Calculation_428967894022410242:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD29E7AF-F3AA-4634-A825-2481BB13BCCE}' />
    </window>
    <window class='worksheet' name='imports-exports-month/year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.10sstqr12u8i5z10y81vi0toajb7].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10sstqr12u8i5z10y81vi0toajb7].[yr:Calculation_428967894022410242:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4141F616-8883-4FEF-BC3F-367195621C50}' />
    </window>
    <window class='worksheet' maximized='true' name='foreign-ports-lading'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1phuvdy1lq0m8w1h3bhw90cfl96s].[none:Port of Lading:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{989B5C76-1E48-4BF1-B435-ADDEE7D8820C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='foreign-ports-lading' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='imports-exports-month/year' width='384'>
      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
      cz/82QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='imports-exports-share' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='imports-exports_03-08' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
